/* 
 * This file is part of Stack Wallet.
 * 
 * Copyright (c) 2023 Cypher Stack
 * All Rights Reserved.
 * The code is distributed under GPLv3 license, see LICENSE file for details.
 * Generated by Cypher Stack on 2023-05-26
 *
 */

import 'dart:io';

import 'package:barcode_scan2/barcode_scan2.dart';
import 'package:flutter/material.dart';
import 'package:permission_handler/permission_handler.dart';

import '../widgets/desktop/primary_button.dart';
import '../widgets/desktop/secondary_button.dart';
import '../widgets/stack_dialog.dart';
import 'logger.dart';

abstract class BarcodeScannerInterface {
  Future<ScanResult> scan({ScanOptions options = const ScanOptions()});
}

class BarcodeScannerWrapper implements BarcodeScannerInterface {
  const BarcodeScannerWrapper();

  @override
  Future<ScanResult> scan({ScanOptions options = const ScanOptions()}) async {
    try {
      final result = await BarcodeScanner.scan(options: options);
      return result;
    } catch (e) {
      rethrow;
    }
  }
}

/// Check if cam perms permanently denied on mobile and open app settings
Future<void> checkCamPermDeniedMobileAndOpenAppSettings(
  BuildContext context, {
  required Logging logging,
}) async {
  if (Platform.isAndroid || Platform.isIOS) {
    final status = await Permission.camera.status;
    if (status == PermissionStatus.permanentlyDenied && context.mounted) {
      final trySettings = await showDialog<bool>(
        context: context,
        builder:
            (context) => StackDialog(
              title: "Camera permissions required",
              message: "Open settings?",
              leftButton: SecondaryButton(
                label: "Cancel",
                onPressed: Navigator.of(context).pop,
              ),
              rightButton: PrimaryButton(
                label: "Continue",
                onPressed: () => Navigator.of(context).pop(true),
              ),
            ),
      );

      if (trySettings == true) {
        final success = await openAppSettings();
        if (!success) {
          logging.e("Failed to open app settings");
          if (context.mounted) {
            await showDialog<bool>(
              context: context,
              builder:
                  (context) => StackDialog(
                    title: "Could not open app settings",
                    message: "You will need manually go find your app settings",
                    rightButton: PrimaryButton(
                      label: "Ok",
                      onPressed: Navigator.of(context).pop,
                    ),
                  ),
            );
          }
        }
      }
    }
  }
}
