/* 
 * This file is part of Stack Wallet.
 * 
 * Copyright (c) 2023 Cypher Stack
 * All Rights Reserved.
 * The code is distributed under GPLv3 license, see LICENSE file for details.
 * Generated by Cypher Stack on 2023-05-26
 *
 */

import 'package:flutter/material.dart';

import '../../../../themes/stack_colors.dart';
import '../../../../utilities/text_styles.dart';
import '../../../../widgets/conditional_parent.dart';
import '../../../../widgets/custom_buttons/simple_copy_button.dart';

class DesktopStepItem extends StatelessWidget {
  const DesktopStepItem({
    super.key,
    required this.label,
    required this.value,
    this.padding = const EdgeInsets.all(16),
    this.vertical = false,
    this.copyableValue = false,
  });

  final String label;
  final String value;
  final EdgeInsets padding;
  final bool vertical;
  final bool copyableValue;

  @override
  Widget build(BuildContext context) {
    return Padding(
      padding: padding,
      child: ConditionalParent(
        condition: vertical,
        builder:
            (child) => Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                ConditionalParent(
                  condition: copyableValue,
                  builder:
                      (child) => Row(
                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                        children: [child, SimpleCopyButton(data: value)],
                      ),
                  child: child,
                ),
                const SizedBox(height: 2),
                copyableValue
                    ? SelectableText(
                      value,
                      style: STextStyles.desktopTextExtraExtraSmall(
                        context,
                      ).copyWith(
                        color:
                            Theme.of(
                              context,
                            ).extension<StackColors>()!.textDark,
                      ),
                    )
                    : Text(
                      value,
                      style: STextStyles.desktopTextExtraExtraSmall(
                        context,
                      ).copyWith(
                        color:
                            Theme.of(
                              context,
                            ).extension<StackColors>()!.textDark,
                      ),
                    ),
              ],
            ),
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceBetween,
          children: [
            Text(label, style: STextStyles.desktopTextExtraExtraSmall(context)),
            if (!vertical)
              copyableValue
                  ? SelectableText(
                    value,
                    style: STextStyles.desktopTextExtraExtraSmall(
                      context,
                    ).copyWith(
                      color:
                          Theme.of(context).extension<StackColors>()!.textDark,
                    ),
                  )
                  : Text(
                    value,
                    style: STextStyles.desktopTextExtraExtraSmall(
                      context,
                    ).copyWith(
                      color:
                          Theme.of(context).extension<StackColors>()!.textDark,
                    ),
                  ),
          ],
        ),
      ),
    );
  }
}
