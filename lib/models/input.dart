/* 
 * This file is part of Stack Wallet.
 * 
 * Copyright (c) 2023 Cypher Stack
 * All Rights Reserved.
 * The code is distributed under GPLv3 license, see LICENSE file for details.
 * Generated by Cypher Stack on 2023-05-26
 *
 */

import 'package:coinlib_flutter/coinlib_flutter.dart';

import '../db/drift/database.dart';
import '../utilities/enums/derive_path_type_enum.dart';
import 'isar/models/isar_models.dart';

abstract class BaseInput {
  BaseInput(this._utxo, {this.key});

  final Object _utxo;
  HDKey? key;

  String get id;

  String? get address;

  BigInt get value;

  int? get blockTime;

  @override
  String toString() {
    return "BaseInput{\n"
        "  _utxo: $_utxo,\n"
        "  key: $key,\n"
        "}";
  }
}

class StandardInput extends BaseInput {
  StandardInput(UTXO super.utxo, {this.derivePathType, super.key});

  final DerivePathType? derivePathType;

  UTXO get utxo => _utxo as UTXO;

  @override
  String get id => utxo.txid;

  @override
  String? get address => utxo.address;

  @override
  BigInt get value => BigInt.from(utxo.value);

  @override
  int? get blockTime => utxo.blockTime;

  @override
  String toString() {
    return "StandardInput{\n"
        "  derivePathType: $derivePathType,\n"
        "  utxo: $utxo,\n"
        "  key: $key,\n"
        "}";
  }

  @override
  bool operator ==(Object other) {
    return other is StandardInput &&
        other.utxo.walletId == utxo.walletId &&
        other.utxo.txid == utxo.txid &&
        other.utxo.vout == utxo.vout &&
        other.derivePathType == derivePathType;
  }

  @override
  int get hashCode => Object.hashAll([utxo.walletId, utxo.txid, utxo.vout]);
}

class MwebInput extends BaseInput {
  MwebInput(MwebUtxo super.utxo);

  MwebUtxo get utxo => _utxo as MwebUtxo;

  @override
  String get id => utxo.outputId;

  @override
  String get address => utxo.address;

  @override
  BigInt get value => BigInt.from(utxo.value);

  @override
  int? get blockTime => utxo.blockTime < 1 ? null : utxo.blockTime;

  @override
  String toString() {
    return "MwebInput{\n"
        "  utxo: $utxo,\n"
        "  key: $key,\n"
        "}";
  }

  @override
  bool operator ==(Object other) {
    return other is MwebInput && other.utxo == utxo;
  }

  @override
  int get hashCode => Object.hashAll([utxo.hashCode]);
}
