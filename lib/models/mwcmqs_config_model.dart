/* 
 * This file is part of Stack Wallet.
 * 
 * Copyright (c) 2023 Cypher Stack
 * All Rights Reserved.
 * The code is distributed under GPLv3 license, see LICENSE file for details.
 * Generated by Cypher Stack on 2023-05-26
 *
 */

import 'dart:convert';

import 'package:hive_ce/hive.dart';

import 'mwcmqs_server_model.dart';

part 'type_adaptors/mwcmqs_config_model.g.dart';

@HiveType(typeId: 82)
class MwcMqsConfigModel {
  @HiveField(1)
  final String host;
  @HiveField(2)
  final int? port;

  MwcMqsConfigModel({required this.host, this.port});

  MwcMqsConfigModel copyWith({int? port, bool? protocolInsecure}) {
    return MwcMqsConfigModel(host: host, port: this.port ?? 443);
  }

  Map<String, dynamic> toMap() {
    final Map<String, dynamic> map = {};
    map['mwcmqs_domain'] = host;
    map['mwcmqs_port'] = port;
    return map;
  }

  Map<String, dynamic> toJson() {
    return {'mwcmqs_domain': host, 'mwcmqs_port': port};
  }

  @override
  String toString() {
    return json.encode(toJson());
  }

  static MwcMqsConfigModel fromString(String MwcMqsConfigString) {
    final dynamic _mwcmqs = json.decode(MwcMqsConfigString);

    final oldDomain = _mwcmqs["domain"] ?? "empty";
    if (oldDomain != "empty") {
      _mwcmqs['mwcmqs_domain'] = _mwcmqs['domain'];
    }
    final oldPort = _mwcmqs["port"] ?? "empty";
    if (oldPort != "empty") {
      _mwcmqs['mwcmqs_port'] = _mwcmqs['port'];
    }

    return MwcMqsConfigModel(
      host: _mwcmqs['mwcmqs_domain'] as String,
      port: _mwcmqs['mwcmqs_port'] as int,
    );
  }

  static MwcMqsConfigModel fromServer(
    MwcMqsServerModel server, {
    bool? protocolInsecure,
    int? addressIndex,
  }) {
    return MwcMqsConfigModel(host: server.host, port: server.port ?? 443);
  }
}
