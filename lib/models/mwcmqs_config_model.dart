/* 
 * This file is part of Stack Wallet.
 * 
 * Copyright (c) 2023 Cypher Stack
 * All Rights Reserved.
 * The code is distributed under GPLv3 license, see LICENSE file for details.
 * Generated by Cypher Stack on 2023-05-26
 *
 */

import 'dart:convert';

import 'package:hive/hive.dart';

import 'mwcmqs_server_model.dart';

part 'type_adaptors/mwcmqs_config_model.g.dart';

@HiveType(typeId: 82)
class MwcMqsConfigModel {
  @HiveField(1)
  final String host;
  @HiveField(2)
  final int? port;
  @HiveField(3)
  final bool? protocolInsecure;
  @HiveField(4)
  final int? addressIndex;

  MwcMqsConfigModel({
    required this.host,
    this.port,
    this.protocolInsecure,
    this.addressIndex,
  });

  MwcMqsConfigModel copyWith({
    int? port,
    bool? protocolInsecure,
    int? addressIndex,
    String? id,
    String? name,
  }) {
    return MwcMqsConfigModel(
      host: host,
      port: this.port ?? 443,
      protocolInsecure: this.protocolInsecure ?? false,
      addressIndex: this.addressIndex ?? 0,
    );
  }

  Map<String, dynamic> toMap() {
    final Map<String, dynamic> map = {};
    map['mwcmqs_domain'] = host;
    map['mwcmqs_port'] = port;
    map['mwcmqs_protocol_insecure'] = protocolInsecure;
    map['mwcmqs_address_index'] = addressIndex;
    return map;
  }

  Map<String, dynamic> toJson() {
    return {
      'mwcmqs_domain': host,
      'mwcmqs_port': port,
      'mwcmqs_protocol_insecure': protocolInsecure,
      'mwcmqs_address_index': addressIndex,
    };
  }

  @override
  String toString() {
    return json.encode(toJson());
  }

  static MwcMqsConfigModel fromString(String MwcMqsConfigString) {
    final dynamic _mwcmqs = json.decode(MwcMqsConfigString);

    final oldDomain = _mwcmqs["domain"] ?? "empty";
    if (oldDomain != "empty") {
      _mwcmqs['mwcmqs_domain'] = _mwcmqs['domain'];
    }
    final oldPort = _mwcmqs["port"] ?? "empty";
    if (oldPort != "empty") {
      _mwcmqs['mwcmqs_port'] = _mwcmqs['port'];
    }
    final oldProtocolInsecure = _mwcmqs["protocol_insecure"] ?? "empty";
    if (oldProtocolInsecure != "empty") {
      _mwcmqs['mwcmqs_protocol_insecure'] = _mwcmqs['protocol_insecure'];
    }
    final oldAddressIndex = _mwcmqs["address_index"] ?? "empty";
    if (oldAddressIndex != "empty") {
      _mwcmqs['mwcmqs_address_index'] = _mwcmqs['address_index'];
    }

    _mwcmqs['mwcmqs_protocol_insecure'] ??= false;
    _mwcmqs['mwcmqs_address_index'] ??= 0;

    return MwcMqsConfigModel(
      host: _mwcmqs['mwcmqs_domain'] as String,
      port: _mwcmqs['mwcmqs_port'] as int,
      protocolInsecure: _mwcmqs['mwcmqs_protocol_insecure'] as bool,
      addressIndex: _mwcmqs['mwcmqs_address_index'] as int,
    );
  }

  static MwcMqsConfigModel fromServer(
    MwcMqsServerModel server, {
    bool? protocolInsecure,
    int? addressIndex,
  }) {
    return MwcMqsConfigModel(
      host: server.host,
      port: server.port ?? 443,
      protocolInsecure: protocolInsecure ?? false,
      addressIndex: addressIndex ?? 0,
    );
  }
}
