/* 
 * This file is part of Stack Wallet.
 * 
 * Copyright (c) 2023 Cypher Stack
 * All Rights Reserved.
 * The code is distributed under GPLv3 license, see LICENSE file for details.
 * Generated by Cypher Stack on 2023-05-26
 *
 */

import 'package:flutter/material.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';

import '../../../../providers/global/secure_store_provider.dart';
import '../../../../providers/providers.dart';
import '../../../../themes/stack_colors.dart';
import '../../../../utilities/logger.dart';
import '../../../../utilities/text_styles.dart';
import '../../../../wallets/isar/providers/wallet_info_provider.dart';
import '../../../../widgets/stack_dialog.dart';

class RestoreFailedDialog extends ConsumerStatefulWidget {
  const RestoreFailedDialog({
    super.key,
    required this.errorMessage,
    required this.walletName,
    required this.walletId,
  });

  final String errorMessage;
  final String walletName;
  final String walletId;

  @override
  ConsumerState<RestoreFailedDialog> createState() =>
      _RestoreFailedDialogState();
}

class _RestoreFailedDialogState extends ConsumerState<RestoreFailedDialog> {
  late final String errorMessage;
  late final String walletName;
  late final String walletId;

  @override
  void initState() {
    errorMessage = widget.errorMessage;
    walletName = widget.walletName;
    walletId = widget.walletId;
    super.initState();
  }

  @override
  Widget build(BuildContext context) {
    return WillPopScope(
      onWillPop: () async {
        return false;
      },
      child: StackDialog(
        title: "Restore failed",
        message: errorMessage,
        rightButton: TextButton(
          style: Theme.of(context)
              .extension<StackColors>()!
              .getSecondaryEnabledButtonStyle(context),
          child: Text(
            "Ok",
            style: STextStyles.itemSubtitle12(context),
          ),
          onPressed: () async {
            try {
              await ref.read(pWallets).deleteWallet(
                    ref.read(pWalletInfo(walletId)),
                    ref.read(secureStoreProvider),
                  );
            } catch (e, s) {
              Logging.instance.e("Error while getting wallet info in restore failed dialog\n"
                "Error: $e\nStack trace: $s");
            } finally {
              if (mounted) {
                Navigator.of(context).pop();
              }
            }
          },
        ),
      ),
    );
  }
}
