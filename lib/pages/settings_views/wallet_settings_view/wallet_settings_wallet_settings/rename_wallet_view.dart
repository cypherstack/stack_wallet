/* 
 * This file is part of Stack Wallet.
 * 
 * Copyright (c) 2023 Cypher Stack
 * All Rights Reserved.
 * The code is distributed under GPLv3 license, see LICENSE file for details.
 * Generated by Cypher Stack on 2023-05-26
 *
 */

import 'dart:async';

import 'package:flutter/material.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';

import '../../../../notifications/show_flush_bar.dart';
import '../../../../providers/db/main_db_provider.dart';
import '../../../../themes/stack_colors.dart';
import '../../../../utilities/constants.dart';
import '../../../../utilities/text_styles.dart';
import '../../../../utilities/util.dart';
import '../../../../wallets/isar/providers/wallet_info_provider.dart';
import '../../../../widgets/background.dart';
import '../../../../widgets/custom_buttons/app_bar_icon_button.dart';
import '../../../../widgets/icon_widgets/x_icon.dart';
import '../../../../widgets/stack_text_field.dart';
import '../../../../widgets/textfield_icon_button.dart';

class RenameWalletView extends ConsumerStatefulWidget {
  const RenameWalletView({super.key, required this.walletId});

  static const String routeName = "/renameWallet";

  final String walletId;

  @override
  ConsumerState<RenameWalletView> createState() => _RenameWalletViewState();
}

class _RenameWalletViewState extends ConsumerState<RenameWalletView> {
  late final TextEditingController _controller;
  late final String walletId;
  late final String originalName;

  final _focusNode = FocusNode();

  @override
  void initState() {
    _controller = TextEditingController();
    walletId = widget.walletId;
    originalName = ref.read(pWalletName(walletId));
    _controller.text = originalName;
    super.initState();
  }

  @override
  void dispose() {
    _controller.dispose();
    _focusNode.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Background(
      child: Scaffold(
        backgroundColor: Theme.of(context).extension<StackColors>()!.background,
        appBar: AppBar(
          leading: AppBarBackButton(
            onPressed: () {
              Navigator.of(context).pop();
            },
          ),
          title: Text("Rename wallet", style: STextStyles.navBarTitle(context)),
        ),
        body: SafeArea(
          child: Padding(
            padding: const EdgeInsets.all(16),
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.stretch,
              children: [
                ClipRRect(
                  borderRadius: BorderRadius.circular(
                    Constants.size.circularBorderRadius,
                  ),
                  child: TextField(
                    autocorrect: Util.isDesktop ? false : true,
                    enableSuggestions: Util.isDesktop ? false : true,
                    controller: _controller,
                    focusNode: _focusNode,
                    style: STextStyles.field(context),
                    onChanged: (_) => setState(() {}),
                    decoration: standardInputDecoration(
                      "Wallet name",
                      _focusNode,
                      context,
                    ).copyWith(
                      suffixIcon:
                          _controller.text.isNotEmpty
                              ? Padding(
                                padding: const EdgeInsets.only(right: 0),
                                child: UnconstrainedBox(
                                  child: Row(
                                    children: [
                                      TextFieldIconButton(
                                        child: const XIcon(),
                                        onTap: () async {
                                          setState(() {
                                            _controller.text = "";
                                          });
                                        },
                                      ),
                                    ],
                                  ),
                                ),
                              )
                              : null,
                    ),
                  ),
                ),
                const Spacer(),
                TextButton(
                  style: Theme.of(context)
                      .extension<StackColors>()!
                      .getPrimaryEnabledButtonStyle(context),
                  onPressed: () async {
                    final newName = _controller.text;

                    String? errMessage;
                    try {
                      await ref
                          .read(pWalletInfo(walletId))
                          .updateName(
                            newName: newName,
                            isar: ref.read(mainDBProvider).isar,
                          );
                    } catch (e) {
                      if (e.toString().contains(
                        "Empty wallet name not allowed!",
                      )) {
                        errMessage = "Empty wallet name not allowed.";
                      } else {
                        errMessage = e.toString();
                      }
                    }

                    if (mounted) {
                      if (errMessage == null) {
                        Navigator.of(context).pop();
                        unawaited(
                          showFloatingFlushBar(
                            type: FlushBarType.success,
                            message: "Wallet renamed",
                            context: context,
                          ),
                        );
                      } else {
                        unawaited(
                          showFloatingFlushBar(
                            type: FlushBarType.warning,
                            message: "Wallet named \"$newName\" already exists",
                            context: context,
                          ),
                        );
                      }
                    }
                  },
                  child: Text("Save", style: STextStyles.button(context)),
                ),
              ],
            ),
          ),
        ),
      ),
    );
  }
}
