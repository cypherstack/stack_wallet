/* 
 * This file is part of Stack Wallet.
 * 
 * Copyright (c) 2023 Cypher Stack
 * All Rights Reserved.
 * The code is distributed under GPLv3 license, see LICENSE file for details.
 * Generated by Cypher Stack on 2023-05-26
 *
 */

import 'dart:io';

import 'package:file_picker/file_picker.dart';
import 'package:path/path.dart' as path;
import 'package:path_provider/path_provider.dart';

import '../../../../../app_config.dart';
import '../../../../../utilities/fs.dart';

class SWBFileSystem {
  Directory? _startPath;

  Future<Directory> prepareStorage() async {
    if (_startPath != null) _startPath;

    final _rootPath = await getApplicationDocumentsDirectory();

    late Directory sampleFolder;
    const dirName = "${AppConfig.prefix}_backup";

    if (Platform.isIOS) {
      sampleFolder = Directory(_rootPath.path);
    } else if (Platform.isAndroid ||
        Platform.isLinux ||
        Platform.isWindows ||
        Platform.isMacOS) {
      sampleFolder = Directory(path.join(_rootPath.path, dirName));
    }

    if (!sampleFolder.existsSync()) {
      sampleFolder.createSync(recursive: true);
    }

    File sampleFile = File('${sampleFolder.path}/Backups_Go_Here.info');
    if (Platform.isIOS) {
      sampleFile = File('${_rootPath.path}/Backups_Go_Here.info');
    }

    if (!sampleFile.existsSync()) {
      sampleFile.createSync();
    }

    _startPath = sampleFolder;
    return sampleFolder;
  }

  Future<String?> pickDir() {
    return FS.pickDirectory(
      initialDirectory: Platform.isWindows
          ? _startPath?.path.replaceAll("/", "\\")
          : _startPath?.path,
    );
  }

  Future<String?> openFile() async {
    FilePickerResult? result;
    if (Platform.isAndroid) {
      result = await FilePicker.platform.pickFiles(
        dialogTitle: "Load backup file",
        initialDirectory: _startPath!.path,
        type: FileType.any,
        allowCompression: false,
        lockParentWindow: true,
      );
    } else if (Platform.isIOS) {
      result = await FilePicker.platform.pickFiles(
        dialogTitle: "Load backup file",
        initialDirectory: _startPath!.path,
        type: FileType.any,
        allowCompression: false,
        lockParentWindow: true,
      );
    } else {
      result = await FilePicker.platform.pickFiles(
        dialogTitle: "Load backup file",
        initialDirectory: _startPath!.path,
        type: FileType.custom,
        allowedExtensions: ['bin', 'swb'],
        allowCompression: false,
        lockParentWindow: true,
      );
    }

    return result?.paths.first;
  }
}
