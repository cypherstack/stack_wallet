/* 
 * This file is part of Stack Wallet.
 * 
 * Copyright (c) 2023 Cypher Stack
 * All Rights Reserved.
 * The code is distributed under GPLv3 license, see LICENSE file for details.
 * Generated by Cypher Stack on 2023-05-26
 *
 */

import 'package:flutter/material.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';

import '../../../../app_config.dart';
import '../../../../themes/stack_colors.dart';
import '../../../../utilities/block_explorers.dart';
import '../../../../utilities/text_styles.dart';
import '../../../../wallets/crypto_currency/crypto_currency.dart';
import '../../../../widgets/background.dart';
import '../../../../widgets/custom_buttons/app_bar_icon_button.dart';
import '../../../../widgets/rounded_white_container.dart';

class ManageExplorerView extends ConsumerStatefulWidget {
  const ManageExplorerView({super.key, required this.coin});

  static const String routeName = "/manageExplorer";

  final CryptoCurrency coin;

  @override
  ConsumerState<ManageExplorerView> createState() => _ManageExplorerViewState();
}

class _ManageExplorerViewState extends ConsumerState<ManageExplorerView> {
  late TextEditingController textEditingController;

  @override
  void initState() {
    super.initState();
    textEditingController = TextEditingController(
      text: getBlockExplorerTransactionUrlFor(
        coin: widget.coin,
        txid: "[TXID]",
      ).toString().replaceAll("%5BTXID%5D", "[TXID]"),
    );
  }

  @override
  void dispose() {
    textEditingController.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Background(
      child: Scaffold(
        backgroundColor: Theme.of(context).extension<StackColors>()!.background,
        appBar: AppBar(
          leading: AppBarBackButton(
            onPressed: () {
              Navigator.of(context).pop();
            },
          ),
          title: Text(
            "${widget.coin.prettyName} block explorer",
            style: STextStyles.navBarTitle(context),
          ),
        ),
        body: SafeArea(
          child: Padding(
            padding: const EdgeInsets.all(16),
            child: Column(
              children: [
                Expanded(
                  child: Column(
                    children: [
                      TextField(
                        controller: textEditingController,
                        decoration: const InputDecoration(
                          border: OutlineInputBorder(),
                        ),
                      ),
                      const SizedBox(height: 8),
                      RoundedWhiteContainer(
                        child: Center(
                          child: Text(
                            "Edit your block explorer above. Keep in mind that "
                            "every block explorer has a slightly different URL "
                            "scheme.\n\nPaste in your block explorer of choice,"
                            " then edit in [TXID] where the transaction ID "
                            "should go, and ${AppConfig.appName} will auto fill the "
                            "transaction ID in that place of URL.",
                            style: STextStyles.itemSubtitle(context),
                          ),
                        ),
                      ),
                    ],
                  ),
                ),
                Align(
                  alignment: Alignment.bottomCenter,
                  child: ConstrainedBox(
                    constraints: const BoxConstraints(
                      minWidth: 480,
                      minHeight: 70,
                    ),
                    child: TextButton(
                      style: Theme.of(context)
                          .extension<StackColors>()!
                          .getPrimaryEnabledButtonStyle(context),
                      onPressed: () async {
                        textEditingController.text =
                            textEditingController.text.trim();
                        await setBlockExplorerForCoin(
                          coin: widget.coin,
                          url: Uri.parse(textEditingController.text),
                        );

                        if (mounted) {
                          Navigator.of(context).pop();
                        }
                      },
                      child: Text("Save", style: STextStyles.button(context)),
                    ),
                  ),
                ),
              ],
            ),
          ),
        ),
      ),
    );
  }
}
