/* 
 * This file is part of Stack Wallet.
 * 
 * Copyright (c) 2023 Cypher Stack
 * All Rights Reserved.
 * The code is distributed under GPLv3 license, see LICENSE file for details.
 * Generated by Cypher Stack on 2023-05-26
 *
 */

import 'package:flutter/material.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';

import '../../../providers/wallet/public_private_balance_state_provider.dart';
import '../../../themes/stack_colors.dart';
import '../../../utilities/amount/amount_formatter.dart';
import '../../../utilities/constants.dart';
import '../../../utilities/text_styles.dart';
import '../../../wallets/crypto_currency/coins/firo.dart';
import '../../../wallets/isar/providers/wallet_info_provider.dart';

class DualBalanceSelectionSheet extends ConsumerStatefulWidget {
  const DualBalanceSelectionSheet({super.key, required this.walletId});

  final String walletId;

  @override
  ConsumerState<DualBalanceSelectionSheet> createState() =>
      _FiroBalanceSelectionSheetState();
}

class _FiroBalanceSelectionSheetState
    extends ConsumerState<DualBalanceSelectionSheet> {
  late final String walletId;

  @override
  void initState() {
    walletId = widget.walletId;
    super.initState();
  }

  @override
  Widget build(BuildContext context) {
    debugPrint("BUILD: $runtimeType");

    final coin = ref.watch(pWalletCoin(walletId));

    return Container(
      decoration: BoxDecoration(
        color: Theme.of(context).extension<StackColors>()!.popupBG,
        borderRadius: const BorderRadius.vertical(top: Radius.circular(20)),
      ),
      child: Padding(
        padding: const EdgeInsets.only(left: 24, right: 24, top: 10, bottom: 0),
        child: Column(
          mainAxisSize: MainAxisSize.min,
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Center(
              child: Container(
                decoration: BoxDecoration(
                  color:
                      Theme.of(
                        context,
                      ).extension<StackColors>()!.textFieldDefaultBG,
                  borderRadius: BorderRadius.circular(
                    Constants.size.circularBorderRadius,
                  ),
                ),
                width: 60,
                height: 4,
              ),
            ),
            const SizedBox(height: 36),
            Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Text(
                  "Select balance",
                  style: STextStyles.pageTitleH2(context),
                  textAlign: TextAlign.left,
                ),
                const SizedBox(height: 16),
                GestureDetector(
                  onTap: () {
                    final state =
                        ref.read(publicPrivateBalanceStateProvider.state).state;
                    if (state != BalanceType.private) {
                      ref.read(publicPrivateBalanceStateProvider.state).state =
                          BalanceType.private;
                    }
                    Navigator.of(context).pop();
                  },
                  child: Container(
                    color: Colors.transparent,
                    child: Row(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        Column(
                          mainAxisAlignment: MainAxisAlignment.start,
                          children: [
                            SizedBox(
                              width: 20,
                              height: 20,
                              child: Radio(
                                activeColor:
                                    Theme.of(context)
                                        .extension<StackColors>()!
                                        .radioButtonIconEnabled,
                                value: BalanceType.private,
                                groupValue:
                                    ref
                                        .watch(
                                          publicPrivateBalanceStateProvider
                                              .state,
                                        )
                                        .state,
                                onChanged: (x) {
                                  ref
                                      .read(
                                        publicPrivateBalanceStateProvider.state,
                                      )
                                      .state = BalanceType.private;

                                  Navigator.of(context).pop();
                                },
                              ),
                            ),
                          ],
                        ),
                        const SizedBox(width: 12),
                        Flexible(
                          child: Column(
                            crossAxisAlignment: CrossAxisAlignment.start,
                            children: [
                              // Row(
                              //   children: [
                              Text(
                                "Private balance",
                                style: STextStyles.titleBold12(context),
                                textAlign: TextAlign.left,
                              ),
                              const SizedBox(width: 2),
                              Text(
                                ref
                                    .watch(pAmountFormatter(coin))
                                    .format(
                                      ref
                                          .watch(
                                            coin is Firo
                                                ? pWalletBalanceTertiary(
                                                  walletId,
                                                )
                                                : pWalletBalanceSecondary(
                                                  walletId,
                                                ),
                                          )
                                          .spendable,
                                    ),
                                style: STextStyles.itemSubtitle(context),
                                textAlign: TextAlign.left,
                              ),
                            ],
                          ),
                          //   ],
                          // ),
                        ),
                      ],
                    ),
                  ),
                ),

                const SizedBox(height: 16),
                GestureDetector(
                  onTap: () {
                    final state =
                        ref.read(publicPrivateBalanceStateProvider.state).state;
                    if (state != BalanceType.public) {
                      ref.read(publicPrivateBalanceStateProvider.state).state =
                          BalanceType.public;
                    }
                    Navigator.of(context).pop();
                  },
                  child: Container(
                    color: Colors.transparent,
                    child: Row(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        Column(
                          children: [
                            SizedBox(
                              width: 20,
                              height: 20,
                              child: Radio(
                                activeColor:
                                    Theme.of(context)
                                        .extension<StackColors>()!
                                        .radioButtonIconEnabled,
                                value: BalanceType.public,
                                groupValue:
                                    ref
                                        .watch(
                                          publicPrivateBalanceStateProvider
                                              .state,
                                        )
                                        .state,
                                onChanged: (x) {
                                  ref
                                      .read(
                                        publicPrivateBalanceStateProvider.state,
                                      )
                                      .state = BalanceType.public;
                                  Navigator.of(context).pop();
                                },
                              ),
                            ),
                          ],
                        ),
                        const SizedBox(width: 12),
                        Flexible(
                          child: Column(
                            crossAxisAlignment: CrossAxisAlignment.start,
                            children: [
                              // Row(
                              //   children: [
                              Text(
                                "Public balance",
                                style: STextStyles.titleBold12(context),
                                textAlign: TextAlign.left,
                              ),
                              const SizedBox(width: 2),
                              Text(
                                ref
                                    .watch(pAmountFormatter(coin))
                                    .format(
                                      ref
                                          .watch(pWalletBalance(walletId))
                                          .spendable,
                                    ),
                                style: STextStyles.itemSubtitle(context),
                                textAlign: TextAlign.left,
                              ),
                            ],
                          ),
                        ),
                      ],
                    ),
                  ),
                ),
                const SizedBox(height: 16),
                const SizedBox(height: 24),
              ],
            ),
          ],
        ),
      ),
    );
  }
}
