// Mocks generated by Mockito 5.4.4 from annotations
// in stackwallet/test/widget_tests/transaction_card_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i11;
import 'dart:typed_data' as _i25;
import 'dart:ui' as _i17;

import 'package:decimal/decimal.dart' as _i22;
import 'package:isar/isar.dart' as _i9;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i16;
import 'package:stackwallet/db/isar/main_db.dart' as _i3;
import 'package:stackwallet/models/isar/models/block_explorer.dart' as _i27;
import 'package:stackwallet/models/isar/models/blockchain_data/v2/transaction_v2.dart'
    as _i29;
import 'package:stackwallet/models/isar/models/contact_entry.dart' as _i26;
import 'package:stackwallet/models/isar/models/isar_models.dart' as _i28;
import 'package:stackwallet/models/isar/stack_theme.dart' as _i24;
import 'package:stackwallet/networking/http.dart' as _i8;
import 'package:stackwallet/services/locale_service.dart' as _i15;
import 'package:stackwallet/services/node_service.dart' as _i2;
import 'package:stackwallet/services/price_service.dart' as _i21;
import 'package:stackwallet/services/wallets.dart' as _i10;
import 'package:stackwallet/themes/theme_service.dart' as _i23;
import 'package:stackwallet/utilities/amount/amount_unit.dart' as _i20;
import 'package:stackwallet/utilities/enums/backup_frequency_type.dart' as _i19;
import 'package:stackwallet/utilities/enums/sync_type_enum.dart' as _i18;
import 'package:stackwallet/utilities/flutter_secure_storage_interface.dart'
    as _i13;
import 'package:stackwallet/utilities/prefs.dart' as _i14;
import 'package:stackwallet/wallets/crypto_currency/crypto_currency.dart'
    as _i4;
import 'package:stackwallet/wallets/isar/models/wallet_info.dart' as _i12;
import 'package:stackwallet/wallets/wallet/wallet.dart' as _i5;
import 'package:stackwallet/wallets/wallet/wallet_mixin_interfaces/cash_fusion_interface.dart'
    as _i6;
import 'package:tuple/tuple.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeNodeService_0 extends _i1.SmartFake implements _i2.NodeService {
  _FakeNodeService_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMainDB_1 extends _i1.SmartFake implements _i3.MainDB {
  _FakeMainDB_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWallet_2<T extends _i4.CryptoCurrency> extends _i1.SmartFake
    implements _i5.Wallet<T> {
  _FakeWallet_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFusionInfo_3 extends _i1.SmartFake implements _i6.FusionInfo {
  _FakeFusionInfo_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDuration_4 extends _i1.SmartFake implements Duration {
  _FakeDuration_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTuple2_5<T1, T2> extends _i1.SmartFake
    implements _i7.Tuple2<T1, T2> {
  _FakeTuple2_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHTTP_6 extends _i1.SmartFake implements _i8.HTTP {
  _FakeHTTP_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIsar_7 extends _i1.SmartFake implements _i9.Isar {
  _FakeIsar_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeQueryBuilder_8<OBJ, R, S> extends _i1.SmartFake
    implements _i9.QueryBuilder<OBJ, R, S> {
  _FakeQueryBuilder_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [Wallets].
///
/// See the documentation for Mockito's code generation for more information.
class MockWallets extends _i1.Mock implements _i10.Wallets {
  MockWallets() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.NodeService get nodeService => (super.noSuchMethod(
        Invocation.getter(#nodeService),
        returnValue: _FakeNodeService_0(
          this,
          Invocation.getter(#nodeService),
        ),
      ) as _i2.NodeService);
  @override
  set nodeService(_i2.NodeService? _nodeService) => super.noSuchMethod(
        Invocation.setter(
          #nodeService,
          _nodeService,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.MainDB get mainDB => (super.noSuchMethod(
        Invocation.getter(#mainDB),
        returnValue: _FakeMainDB_1(
          this,
          Invocation.getter(#mainDB),
        ),
      ) as _i3.MainDB);
  @override
  set mainDB(_i3.MainDB? _mainDB) => super.noSuchMethod(
        Invocation.setter(
          #mainDB,
          _mainDB,
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<_i5.Wallet<_i4.CryptoCurrency>> get wallets => (super.noSuchMethod(
        Invocation.getter(#wallets),
        returnValue: <_i5.Wallet<_i4.CryptoCurrency>>[],
      ) as List<_i5.Wallet<_i4.CryptoCurrency>>);
  @override
  _i5.Wallet<_i4.CryptoCurrency> getWallet(String? walletId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWallet,
          [walletId],
        ),
        returnValue: _FakeWallet_2<_i4.CryptoCurrency>(
          this,
          Invocation.method(
            #getWallet,
            [walletId],
          ),
        ),
      ) as _i5.Wallet<_i4.CryptoCurrency>);
  @override
  void addWallet(_i5.Wallet<_i4.CryptoCurrency>? wallet) => super.noSuchMethod(
        Invocation.method(
          #addWallet,
          [wallet],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i11.Future<void> deleteWallet(
    _i12.WalletInfo? info,
    _i13.SecureStorageInterface? secureStorage,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteWallet,
          [
            info,
            secureStorage,
          ],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);
  @override
  _i11.Future<void> load(
    _i14.Prefs? prefs,
    _i3.MainDB? mainDB,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #load,
          [
            prefs,
            mainDB,
          ],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);
  @override
  _i11.Future<void> loadAfterStackRestore(
    _i14.Prefs? prefs,
    List<_i5.Wallet<_i4.CryptoCurrency>>? wallets,
    bool? isDesktop,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #loadAfterStackRestore,
          [
            prefs,
            wallets,
            isDesktop,
          ],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);
}

/// A class which mocks [LocaleService].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocaleService extends _i1.Mock implements _i15.LocaleService {
  MockLocaleService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get locale => (super.noSuchMethod(
        Invocation.getter(#locale),
        returnValue: _i16.dummyValue<String>(
          this,
          Invocation.getter(#locale),
        ),
      ) as String);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  _i11.Future<void> loadLocale({bool? notify = true}) => (super.noSuchMethod(
        Invocation.method(
          #loadLocale,
          [],
          {#notify: notify},
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);
  @override
  void addListener(_i17.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i17.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [Prefs].
///
/// See the documentation for Mockito's code generation for more information.
class MockPrefs extends _i1.Mock implements _i14.Prefs {
  MockPrefs() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isInitialized => (super.noSuchMethod(
        Invocation.getter(#isInitialized),
        returnValue: false,
      ) as bool);
  @override
  int get lastUnlockedTimeout => (super.noSuchMethod(
        Invocation.getter(#lastUnlockedTimeout),
        returnValue: 0,
      ) as int);
  @override
  set lastUnlockedTimeout(int? lastUnlockedTimeout) => super.noSuchMethod(
        Invocation.setter(
          #lastUnlockedTimeout,
          lastUnlockedTimeout,
        ),
        returnValueForMissingStub: null,
      );
  @override
  int get lastUnlocked => (super.noSuchMethod(
        Invocation.getter(#lastUnlocked),
        returnValue: 0,
      ) as int);
  @override
  set lastUnlocked(int? lastUnlocked) => super.noSuchMethod(
        Invocation.setter(
          #lastUnlocked,
          lastUnlocked,
        ),
        returnValueForMissingStub: null,
      );
  @override
  int get currentNotificationId => (super.noSuchMethod(
        Invocation.getter(#currentNotificationId),
        returnValue: 0,
      ) as int);
  @override
  List<String> get walletIdsSyncOnStartup => (super.noSuchMethod(
        Invocation.getter(#walletIdsSyncOnStartup),
        returnValue: <String>[],
      ) as List<String>);
  @override
  set walletIdsSyncOnStartup(List<String>? walletIdsSyncOnStartup) =>
      super.noSuchMethod(
        Invocation.setter(
          #walletIdsSyncOnStartup,
          walletIdsSyncOnStartup,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i18.SyncingType get syncType => (super.noSuchMethod(
        Invocation.getter(#syncType),
        returnValue: _i18.SyncingType.currentWalletOnly,
      ) as _i18.SyncingType);
  @override
  set syncType(_i18.SyncingType? syncType) => super.noSuchMethod(
        Invocation.setter(
          #syncType,
          syncType,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get wifiOnly => (super.noSuchMethod(
        Invocation.getter(#wifiOnly),
        returnValue: false,
      ) as bool);
  @override
  set wifiOnly(bool? wifiOnly) => super.noSuchMethod(
        Invocation.setter(
          #wifiOnly,
          wifiOnly,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get showFavoriteWallets => (super.noSuchMethod(
        Invocation.getter(#showFavoriteWallets),
        returnValue: false,
      ) as bool);
  @override
  set showFavoriteWallets(bool? showFavoriteWallets) => super.noSuchMethod(
        Invocation.setter(
          #showFavoriteWallets,
          showFavoriteWallets,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get language => (super.noSuchMethod(
        Invocation.getter(#language),
        returnValue: _i16.dummyValue<String>(
          this,
          Invocation.getter(#language),
        ),
      ) as String);
  @override
  set language(String? newLanguage) => super.noSuchMethod(
        Invocation.setter(
          #language,
          newLanguage,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get currency => (super.noSuchMethod(
        Invocation.getter(#currency),
        returnValue: _i16.dummyValue<String>(
          this,
          Invocation.getter(#currency),
        ),
      ) as String);
  @override
  set currency(String? newCurrency) => super.noSuchMethod(
        Invocation.setter(
          #currency,
          newCurrency,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get randomizePIN => (super.noSuchMethod(
        Invocation.getter(#randomizePIN),
        returnValue: false,
      ) as bool);
  @override
  set randomizePIN(bool? randomizePIN) => super.noSuchMethod(
        Invocation.setter(
          #randomizePIN,
          randomizePIN,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get useBiometrics => (super.noSuchMethod(
        Invocation.getter(#useBiometrics),
        returnValue: false,
      ) as bool);
  @override
  set useBiometrics(bool? useBiometrics) => super.noSuchMethod(
        Invocation.setter(
          #useBiometrics,
          useBiometrics,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get hasPin => (super.noSuchMethod(
        Invocation.getter(#hasPin),
        returnValue: false,
      ) as bool);
  @override
  set hasPin(bool? hasPin) => super.noSuchMethod(
        Invocation.setter(
          #hasPin,
          hasPin,
        ),
        returnValueForMissingStub: null,
      );
  @override
  int get familiarity => (super.noSuchMethod(
        Invocation.getter(#familiarity),
        returnValue: 0,
      ) as int);
  @override
  set familiarity(int? familiarity) => super.noSuchMethod(
        Invocation.setter(
          #familiarity,
          familiarity,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get torKillSwitch => (super.noSuchMethod(
        Invocation.getter(#torKillSwitch),
        returnValue: false,
      ) as bool);
  @override
  set torKillSwitch(bool? torKillswitch) => super.noSuchMethod(
        Invocation.setter(
          #torKillSwitch,
          torKillswitch,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get showTestNetCoins => (super.noSuchMethod(
        Invocation.getter(#showTestNetCoins),
        returnValue: false,
      ) as bool);
  @override
  set showTestNetCoins(bool? showTestNetCoins) => super.noSuchMethod(
        Invocation.setter(
          #showTestNetCoins,
          showTestNetCoins,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get isAutoBackupEnabled => (super.noSuchMethod(
        Invocation.getter(#isAutoBackupEnabled),
        returnValue: false,
      ) as bool);
  @override
  set isAutoBackupEnabled(bool? isAutoBackupEnabled) => super.noSuchMethod(
        Invocation.setter(
          #isAutoBackupEnabled,
          isAutoBackupEnabled,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set autoBackupLocation(String? autoBackupLocation) => super.noSuchMethod(
        Invocation.setter(
          #autoBackupLocation,
          autoBackupLocation,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i19.BackupFrequencyType get backupFrequencyType => (super.noSuchMethod(
        Invocation.getter(#backupFrequencyType),
        returnValue: _i19.BackupFrequencyType.everyTenMinutes,
      ) as _i19.BackupFrequencyType);
  @override
  set backupFrequencyType(_i19.BackupFrequencyType? backupFrequencyType) =>
      super.noSuchMethod(
        Invocation.setter(
          #backupFrequencyType,
          backupFrequencyType,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set lastAutoBackup(DateTime? lastAutoBackup) => super.noSuchMethod(
        Invocation.setter(
          #lastAutoBackup,
          lastAutoBackup,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get hideBlockExplorerWarning => (super.noSuchMethod(
        Invocation.getter(#hideBlockExplorerWarning),
        returnValue: false,
      ) as bool);
  @override
  set hideBlockExplorerWarning(bool? hideBlockExplorerWarning) =>
      super.noSuchMethod(
        Invocation.setter(
          #hideBlockExplorerWarning,
          hideBlockExplorerWarning,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get gotoWalletOnStartup => (super.noSuchMethod(
        Invocation.getter(#gotoWalletOnStartup),
        returnValue: false,
      ) as bool);
  @override
  set gotoWalletOnStartup(bool? gotoWalletOnStartup) => super.noSuchMethod(
        Invocation.setter(
          #gotoWalletOnStartup,
          gotoWalletOnStartup,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set startupWalletId(String? startupWalletId) => super.noSuchMethod(
        Invocation.setter(
          #startupWalletId,
          startupWalletId,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get externalCalls => (super.noSuchMethod(
        Invocation.getter(#externalCalls),
        returnValue: false,
      ) as bool);
  @override
  set externalCalls(bool? externalCalls) => super.noSuchMethod(
        Invocation.setter(
          #externalCalls,
          externalCalls,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get enableCoinControl => (super.noSuchMethod(
        Invocation.getter(#enableCoinControl),
        returnValue: false,
      ) as bool);
  @override
  set enableCoinControl(bool? enableCoinControl) => super.noSuchMethod(
        Invocation.setter(
          #enableCoinControl,
          enableCoinControl,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get enableSystemBrightness => (super.noSuchMethod(
        Invocation.getter(#enableSystemBrightness),
        returnValue: false,
      ) as bool);
  @override
  set enableSystemBrightness(bool? enableSystemBrightness) =>
      super.noSuchMethod(
        Invocation.setter(
          #enableSystemBrightness,
          enableSystemBrightness,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get themeId => (super.noSuchMethod(
        Invocation.getter(#themeId),
        returnValue: _i16.dummyValue<String>(
          this,
          Invocation.getter(#themeId),
        ),
      ) as String);
  @override
  set themeId(String? themeId) => super.noSuchMethod(
        Invocation.setter(
          #themeId,
          themeId,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get systemBrightnessLightThemeId => (super.noSuchMethod(
        Invocation.getter(#systemBrightnessLightThemeId),
        returnValue: _i16.dummyValue<String>(
          this,
          Invocation.getter(#systemBrightnessLightThemeId),
        ),
      ) as String);
  @override
  set systemBrightnessLightThemeId(String? systemBrightnessLightThemeId) =>
      super.noSuchMethod(
        Invocation.setter(
          #systemBrightnessLightThemeId,
          systemBrightnessLightThemeId,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get systemBrightnessDarkThemeId => (super.noSuchMethod(
        Invocation.getter(#systemBrightnessDarkThemeId),
        returnValue: _i16.dummyValue<String>(
          this,
          Invocation.getter(#systemBrightnessDarkThemeId),
        ),
      ) as String);
  @override
  set systemBrightnessDarkThemeId(String? systemBrightnessDarkThemeId) =>
      super.noSuchMethod(
        Invocation.setter(
          #systemBrightnessDarkThemeId,
          systemBrightnessDarkThemeId,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get useTor => (super.noSuchMethod(
        Invocation.getter(#useTor),
        returnValue: false,
      ) as bool);
  @override
  set useTor(bool? useTor) => super.noSuchMethod(
        Invocation.setter(
          #useTor,
          useTor,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get autoPin => (super.noSuchMethod(
        Invocation.getter(#autoPin),
        returnValue: false,
      ) as bool);
  @override
  set autoPin(bool? autoPin) => super.noSuchMethod(
        Invocation.setter(
          #autoPin,
          autoPin,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  _i11.Future<void> init() => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);
  @override
  _i11.Future<void> incrementCurrentNotificationIndex() => (super.noSuchMethod(
        Invocation.method(
          #incrementCurrentNotificationIndex,
          [],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);
  @override
  _i11.Future<bool> isExternalCallsSet() => (super.noSuchMethod(
        Invocation.method(
          #isExternalCallsSet,
          [],
        ),
        returnValue: _i11.Future<bool>.value(false),
      ) as _i11.Future<bool>);
  @override
  _i11.Future<void> saveUserID(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #saveUserID,
          [userId],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);
  @override
  _i11.Future<void> saveSignupEpoch(int? signupEpoch) => (super.noSuchMethod(
        Invocation.method(
          #saveSignupEpoch,
          [signupEpoch],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);
  @override
  _i20.AmountUnit amountUnit(_i4.CryptoCurrency? coin) => (super.noSuchMethod(
        Invocation.method(
          #amountUnit,
          [coin],
        ),
        returnValue: _i20.AmountUnit.normal,
      ) as _i20.AmountUnit);
  @override
  void updateAmountUnit({
    required _i4.CryptoCurrency? coin,
    required _i20.AmountUnit? amountUnit,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #updateAmountUnit,
          [],
          {
            #coin: coin,
            #amountUnit: amountUnit,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  int maxDecimals(_i4.CryptoCurrency? coin) => (super.noSuchMethod(
        Invocation.method(
          #maxDecimals,
          [coin],
        ),
        returnValue: 0,
      ) as int);
  @override
  void updateMaxDecimals({
    required _i4.CryptoCurrency? coin,
    required int? maxDecimals,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #updateMaxDecimals,
          [],
          {
            #coin: coin,
            #maxDecimals: maxDecimals,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i6.FusionInfo getFusionServerInfo(_i4.CryptoCurrency? coin) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFusionServerInfo,
          [coin],
        ),
        returnValue: _FakeFusionInfo_3(
          this,
          Invocation.method(
            #getFusionServerInfo,
            [coin],
          ),
        ),
      ) as _i6.FusionInfo);
  @override
  void setFusionServerInfo(
    _i4.CryptoCurrency? coin,
    _i6.FusionInfo? fusionServerInfo,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setFusionServerInfo,
          [
            coin,
            fusionServerInfo,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addListener(_i17.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i17.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [PriceService].
///
/// See the documentation for Mockito's code generation for more information.
class MockPriceService extends _i1.Mock implements _i21.PriceService {
  MockPriceService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get baseTicker => (super.noSuchMethod(
        Invocation.getter(#baseTicker),
        returnValue: _i16.dummyValue<String>(
          this,
          Invocation.getter(#baseTicker),
        ),
      ) as String);
  @override
  set baseTicker(String? _baseTicker) => super.noSuchMethod(
        Invocation.setter(
          #baseTicker,
          _baseTicker,
        ),
        returnValueForMissingStub: null,
      );
  @override
  Duration get updateInterval => (super.noSuchMethod(
        Invocation.getter(#updateInterval),
        returnValue: _FakeDuration_4(
          this,
          Invocation.getter(#updateInterval),
        ),
      ) as Duration);
  @override
  _i11.Future<Set<String>> get tokenContractAddressesToCheck =>
      (super.noSuchMethod(
        Invocation.getter(#tokenContractAddressesToCheck),
        returnValue: _i11.Future<Set<String>>.value(<String>{}),
      ) as _i11.Future<Set<String>>);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  _i7.Tuple2<_i22.Decimal, double> getPrice(_i4.CryptoCurrency? coin) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPrice,
          [coin],
        ),
        returnValue: _FakeTuple2_5<_i22.Decimal, double>(
          this,
          Invocation.method(
            #getPrice,
            [coin],
          ),
        ),
      ) as _i7.Tuple2<_i22.Decimal, double>);
  @override
  _i7.Tuple2<_i22.Decimal, double> getTokenPrice(String? contractAddress) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTokenPrice,
          [contractAddress],
        ),
        returnValue: _FakeTuple2_5<_i22.Decimal, double>(
          this,
          Invocation.method(
            #getTokenPrice,
            [contractAddress],
          ),
        ),
      ) as _i7.Tuple2<_i22.Decimal, double>);
  @override
  _i11.Future<void> updatePrice() => (super.noSuchMethod(
        Invocation.method(
          #updatePrice,
          [],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);
  @override
  void cancel() => super.noSuchMethod(
        Invocation.method(
          #cancel,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void start(bool? rightAway) => super.noSuchMethod(
        Invocation.method(
          #start,
          [rightAway],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addListener(_i17.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i17.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [ThemeService].
///
/// See the documentation for Mockito's code generation for more information.
class MockThemeService extends _i1.Mock implements _i23.ThemeService {
  MockThemeService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.HTTP get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeHTTP_6(
          this,
          Invocation.getter(#client),
        ),
      ) as _i8.HTTP);
  @override
  set client(_i8.HTTP? _client) => super.noSuchMethod(
        Invocation.setter(
          #client,
          _client,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.MainDB get db => (super.noSuchMethod(
        Invocation.getter(#db),
        returnValue: _FakeMainDB_1(
          this,
          Invocation.getter(#db),
        ),
      ) as _i3.MainDB);
  @override
  List<_i24.StackTheme> get installedThemes => (super.noSuchMethod(
        Invocation.getter(#installedThemes),
        returnValue: <_i24.StackTheme>[],
      ) as List<_i24.StackTheme>);
  @override
  void init(_i3.MainDB? db) => super.noSuchMethod(
        Invocation.method(
          #init,
          [db],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i11.Future<void> install({required _i25.Uint8List? themeArchiveData}) =>
      (super.noSuchMethod(
        Invocation.method(
          #install,
          [],
          {#themeArchiveData: themeArchiveData},
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);
  @override
  _i11.Future<void> remove({required String? themeId}) => (super.noSuchMethod(
        Invocation.method(
          #remove,
          [],
          {#themeId: themeId},
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);
  @override
  _i11.Future<void> checkDefaultThemesOnStartup() => (super.noSuchMethod(
        Invocation.method(
          #checkDefaultThemesOnStartup,
          [],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);
  @override
  _i11.Future<bool> verifyInstalled({required String? themeId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyInstalled,
          [],
          {#themeId: themeId},
        ),
        returnValue: _i11.Future<bool>.value(false),
      ) as _i11.Future<bool>);
  @override
  _i11.Future<List<_i23.StackThemeMetaData>> fetchThemes() =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchThemes,
          [],
        ),
        returnValue: _i11.Future<List<_i23.StackThemeMetaData>>.value(
            <_i23.StackThemeMetaData>[]),
      ) as _i11.Future<List<_i23.StackThemeMetaData>>);
  @override
  _i11.Future<_i25.Uint8List> fetchTheme(
          {required _i23.StackThemeMetaData? themeMetaData}) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchTheme,
          [],
          {#themeMetaData: themeMetaData},
        ),
        returnValue: _i11.Future<_i25.Uint8List>.value(_i25.Uint8List(0)),
      ) as _i11.Future<_i25.Uint8List>);
  @override
  _i24.StackTheme? getTheme({required String? themeId}) =>
      (super.noSuchMethod(Invocation.method(
        #getTheme,
        [],
        {#themeId: themeId},
      )) as _i24.StackTheme?);
}

/// A class which mocks [MainDB].
///
/// See the documentation for Mockito's code generation for more information.
class MockMainDB extends _i1.Mock implements _i3.MainDB {
  MockMainDB() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Isar get isar => (super.noSuchMethod(
        Invocation.getter(#isar),
        returnValue: _FakeIsar_7(
          this,
          Invocation.getter(#isar),
        ),
      ) as _i9.Isar);
  @override
  _i11.Future<bool> initMainDB({_i9.Isar? mock}) => (super.noSuchMethod(
        Invocation.method(
          #initMainDB,
          [],
          {#mock: mock},
        ),
        returnValue: _i11.Future<bool>.value(false),
      ) as _i11.Future<bool>);
  @override
  _i11.Future<void> putWalletInfo(_i12.WalletInfo? walletInfo) =>
      (super.noSuchMethod(
        Invocation.method(
          #putWalletInfo,
          [walletInfo],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);
  @override
  _i11.Future<void> updateWalletInfo(_i12.WalletInfo? walletInfo) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateWalletInfo,
          [walletInfo],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);
  @override
  List<_i26.ContactEntry> getContactEntries() => (super.noSuchMethod(
        Invocation.method(
          #getContactEntries,
          [],
        ),
        returnValue: <_i26.ContactEntry>[],
      ) as List<_i26.ContactEntry>);
  @override
  _i11.Future<bool> deleteContactEntry({required String? id}) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteContactEntry,
          [],
          {#id: id},
        ),
        returnValue: _i11.Future<bool>.value(false),
      ) as _i11.Future<bool>);
  @override
  _i11.Future<bool> isContactEntryExists({required String? id}) =>
      (super.noSuchMethod(
        Invocation.method(
          #isContactEntryExists,
          [],
          {#id: id},
        ),
        returnValue: _i11.Future<bool>.value(false),
      ) as _i11.Future<bool>);
  @override
  _i26.ContactEntry? getContactEntry({required String? id}) =>
      (super.noSuchMethod(Invocation.method(
        #getContactEntry,
        [],
        {#id: id},
      )) as _i26.ContactEntry?);
  @override
  _i11.Future<bool> putContactEntry(
          {required _i26.ContactEntry? contactEntry}) =>
      (super.noSuchMethod(
        Invocation.method(
          #putContactEntry,
          [],
          {#contactEntry: contactEntry},
        ),
        returnValue: _i11.Future<bool>.value(false),
      ) as _i11.Future<bool>);
  @override
  _i27.TransactionBlockExplorer? getTransactionBlockExplorer(
          {required _i4.CryptoCurrency? cryptoCurrency}) =>
      (super.noSuchMethod(Invocation.method(
        #getTransactionBlockExplorer,
        [],
        {#cryptoCurrency: cryptoCurrency},
      )) as _i27.TransactionBlockExplorer?);
  @override
  _i11.Future<int> putTransactionBlockExplorer(
          _i27.TransactionBlockExplorer? explorer) =>
      (super.noSuchMethod(
        Invocation.method(
          #putTransactionBlockExplorer,
          [explorer],
        ),
        returnValue: _i11.Future<int>.value(0),
      ) as _i11.Future<int>);
  @override
  _i9.QueryBuilder<_i28.Address, _i28.Address, _i9.QAfterWhereClause>
      getAddresses(String? walletId) => (super.noSuchMethod(
            Invocation.method(
              #getAddresses,
              [walletId],
            ),
            returnValue: _FakeQueryBuilder_8<_i28.Address, _i28.Address,
                _i9.QAfterWhereClause>(
              this,
              Invocation.method(
                #getAddresses,
                [walletId],
              ),
            ),
          ) as _i9
              .QueryBuilder<_i28.Address, _i28.Address, _i9.QAfterWhereClause>);
  @override
  _i11.Future<int> putAddress(_i28.Address? address) => (super.noSuchMethod(
        Invocation.method(
          #putAddress,
          [address],
        ),
        returnValue: _i11.Future<int>.value(0),
      ) as _i11.Future<int>);
  @override
  _i11.Future<List<int>> putAddresses(List<_i28.Address>? addresses) =>
      (super.noSuchMethod(
        Invocation.method(
          #putAddresses,
          [addresses],
        ),
        returnValue: _i11.Future<List<int>>.value(<int>[]),
      ) as _i11.Future<List<int>>);
  @override
  _i11.Future<List<int>> updateOrPutAddresses(List<_i28.Address>? addresses) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateOrPutAddresses,
          [addresses],
        ),
        returnValue: _i11.Future<List<int>>.value(<int>[]),
      ) as _i11.Future<List<int>>);
  @override
  _i11.Future<_i28.Address?> getAddress(
    String? walletId,
    String? address,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAddress,
          [
            walletId,
            address,
          ],
        ),
        returnValue: _i11.Future<_i28.Address?>.value(),
      ) as _i11.Future<_i28.Address?>);
  @override
  _i11.Future<int> updateAddress(
    _i28.Address? oldAddress,
    _i28.Address? newAddress,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateAddress,
          [
            oldAddress,
            newAddress,
          ],
        ),
        returnValue: _i11.Future<int>.value(0),
      ) as _i11.Future<int>);
  @override
  _i9.QueryBuilder<_i28.Transaction, _i28.Transaction, _i9.QAfterWhereClause>
      getTransactions(String? walletId) => (super.noSuchMethod(
            Invocation.method(
              #getTransactions,
              [walletId],
            ),
            returnValue: _FakeQueryBuilder_8<_i28.Transaction, _i28.Transaction,
                _i9.QAfterWhereClause>(
              this,
              Invocation.method(
                #getTransactions,
                [walletId],
              ),
            ),
          ) as _i9.QueryBuilder<_i28.Transaction, _i28.Transaction,
              _i9.QAfterWhereClause>);
  @override
  _i11.Future<int> putTransaction(_i28.Transaction? transaction) =>
      (super.noSuchMethod(
        Invocation.method(
          #putTransaction,
          [transaction],
        ),
        returnValue: _i11.Future<int>.value(0),
      ) as _i11.Future<int>);
  @override
  _i11.Future<List<int>> putTransactions(
          List<_i28.Transaction>? transactions) =>
      (super.noSuchMethod(
        Invocation.method(
          #putTransactions,
          [transactions],
        ),
        returnValue: _i11.Future<List<int>>.value(<int>[]),
      ) as _i11.Future<List<int>>);
  @override
  _i11.Future<_i28.Transaction?> getTransaction(
    String? walletId,
    String? txid,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTransaction,
          [
            walletId,
            txid,
          ],
        ),
        returnValue: _i11.Future<_i28.Transaction?>.value(),
      ) as _i11.Future<_i28.Transaction?>);
  @override
  _i11.Stream<_i28.Transaction?> watchTransaction({
    required int? id,
    bool? fireImmediately = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #watchTransaction,
          [],
          {
            #id: id,
            #fireImmediately: fireImmediately,
          },
        ),
        returnValue: _i11.Stream<_i28.Transaction?>.empty(),
      ) as _i11.Stream<_i28.Transaction?>);
  @override
  _i9.QueryBuilder<_i28.UTXO, _i28.UTXO, _i9.QAfterWhereClause> getUTXOs(
          String? walletId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUTXOs,
          [walletId],
        ),
        returnValue:
            _FakeQueryBuilder_8<_i28.UTXO, _i28.UTXO, _i9.QAfterWhereClause>(
          this,
          Invocation.method(
            #getUTXOs,
            [walletId],
          ),
        ),
      ) as _i9.QueryBuilder<_i28.UTXO, _i28.UTXO, _i9.QAfterWhereClause>);
  @override
  _i9.QueryBuilder<_i28.UTXO, _i28.UTXO, _i9.QAfterFilterCondition>
      getUTXOsByAddress(
    String? walletId,
    String? address,
  ) =>
          (super.noSuchMethod(
            Invocation.method(
              #getUTXOsByAddress,
              [
                walletId,
                address,
              ],
            ),
            returnValue: _FakeQueryBuilder_8<_i28.UTXO, _i28.UTXO,
                _i9.QAfterFilterCondition>(
              this,
              Invocation.method(
                #getUTXOsByAddress,
                [
                  walletId,
                  address,
                ],
              ),
            ),
          ) as _i9
              .QueryBuilder<_i28.UTXO, _i28.UTXO, _i9.QAfterFilterCondition>);
  @override
  _i11.Future<void> putUTXO(_i28.UTXO? utxo) => (super.noSuchMethod(
        Invocation.method(
          #putUTXO,
          [utxo],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);
  @override
  _i11.Future<void> putUTXOs(List<_i28.UTXO>? utxos) => (super.noSuchMethod(
        Invocation.method(
          #putUTXOs,
          [utxos],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);
  @override
  _i11.Future<bool> updateUTXOs(
    String? walletId,
    List<_i28.UTXO>? utxos,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUTXOs,
          [
            walletId,
            utxos,
          ],
        ),
        returnValue: _i11.Future<bool>.value(false),
      ) as _i11.Future<bool>);
  @override
  _i11.Stream<_i28.UTXO?> watchUTXO({
    required int? id,
    bool? fireImmediately = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #watchUTXO,
          [],
          {
            #id: id,
            #fireImmediately: fireImmediately,
          },
        ),
        returnValue: _i11.Stream<_i28.UTXO?>.empty(),
      ) as _i11.Stream<_i28.UTXO?>);
  @override
  _i9.QueryBuilder<_i28.TransactionNote, _i28.TransactionNote,
      _i9.QAfterWhereClause> getTransactionNotes(
          String? walletId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTransactionNotes,
          [walletId],
        ),
        returnValue: _FakeQueryBuilder_8<_i28.TransactionNote,
            _i28.TransactionNote, _i9.QAfterWhereClause>(
          this,
          Invocation.method(
            #getTransactionNotes,
            [walletId],
          ),
        ),
      ) as _i9.QueryBuilder<_i28.TransactionNote, _i28.TransactionNote,
          _i9.QAfterWhereClause>);
  @override
  _i11.Future<void> putTransactionNote(_i28.TransactionNote? transactionNote) =>
      (super.noSuchMethod(
        Invocation.method(
          #putTransactionNote,
          [transactionNote],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);
  @override
  _i11.Future<void> putTransactionNotes(
          List<_i28.TransactionNote>? transactionNotes) =>
      (super.noSuchMethod(
        Invocation.method(
          #putTransactionNotes,
          [transactionNotes],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);
  @override
  _i11.Future<_i28.TransactionNote?> getTransactionNote(
    String? walletId,
    String? txid,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTransactionNote,
          [
            walletId,
            txid,
          ],
        ),
        returnValue: _i11.Future<_i28.TransactionNote?>.value(),
      ) as _i11.Future<_i28.TransactionNote?>);
  @override
  _i11.Stream<_i28.TransactionNote?> watchTransactionNote({
    required int? id,
    bool? fireImmediately = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #watchTransactionNote,
          [],
          {
            #id: id,
            #fireImmediately: fireImmediately,
          },
        ),
        returnValue: _i11.Stream<_i28.TransactionNote?>.empty(),
      ) as _i11.Stream<_i28.TransactionNote?>);
  @override
  _i9.QueryBuilder<_i28.AddressLabel, _i28.AddressLabel, _i9.QAfterWhereClause>
      getAddressLabels(String? walletId) => (super.noSuchMethod(
            Invocation.method(
              #getAddressLabels,
              [walletId],
            ),
            returnValue: _FakeQueryBuilder_8<_i28.AddressLabel,
                _i28.AddressLabel, _i9.QAfterWhereClause>(
              this,
              Invocation.method(
                #getAddressLabels,
                [walletId],
              ),
            ),
          ) as _i9.QueryBuilder<_i28.AddressLabel, _i28.AddressLabel,
              _i9.QAfterWhereClause>);
  @override
  _i11.Future<int> putAddressLabel(_i28.AddressLabel? addressLabel) =>
      (super.noSuchMethod(
        Invocation.method(
          #putAddressLabel,
          [addressLabel],
        ),
        returnValue: _i11.Future<int>.value(0),
      ) as _i11.Future<int>);
  @override
  int putAddressLabelSync(_i28.AddressLabel? addressLabel) =>
      (super.noSuchMethod(
        Invocation.method(
          #putAddressLabelSync,
          [addressLabel],
        ),
        returnValue: 0,
      ) as int);
  @override
  _i11.Future<void> putAddressLabels(List<_i28.AddressLabel>? addressLabels) =>
      (super.noSuchMethod(
        Invocation.method(
          #putAddressLabels,
          [addressLabels],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);
  @override
  _i11.Future<_i28.AddressLabel?> getAddressLabel(
    String? walletId,
    String? addressString,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAddressLabel,
          [
            walletId,
            addressString,
          ],
        ),
        returnValue: _i11.Future<_i28.AddressLabel?>.value(),
      ) as _i11.Future<_i28.AddressLabel?>);
  @override
  _i28.AddressLabel? getAddressLabelSync(
    String? walletId,
    String? addressString,
  ) =>
      (super.noSuchMethod(Invocation.method(
        #getAddressLabelSync,
        [
          walletId,
          addressString,
        ],
      )) as _i28.AddressLabel?);
  @override
  _i11.Stream<_i28.AddressLabel?> watchAddressLabel({
    required int? id,
    bool? fireImmediately = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #watchAddressLabel,
          [],
          {
            #id: id,
            #fireImmediately: fireImmediately,
          },
        ),
        returnValue: _i11.Stream<_i28.AddressLabel?>.empty(),
      ) as _i11.Stream<_i28.AddressLabel?>);
  @override
  _i11.Future<int> updateAddressLabel(_i28.AddressLabel? addressLabel) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateAddressLabel,
          [addressLabel],
        ),
        returnValue: _i11.Future<int>.value(0),
      ) as _i11.Future<int>);
  @override
  _i11.Future<void> deleteWalletBlockchainData(String? walletId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteWalletBlockchainData,
          [walletId],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);
  @override
  _i11.Future<void> deleteAddressLabels(String? walletId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteAddressLabels,
          [walletId],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);
  @override
  _i11.Future<void> deleteTransactionNotes(String? walletId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteTransactionNotes,
          [walletId],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);
  @override
  _i11.Future<void> addNewTransactionData(
    List<_i7.Tuple2<_i28.Transaction, _i28.Address?>>? transactionsData,
    String? walletId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addNewTransactionData,
          [
            transactionsData,
            walletId,
          ],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);
  @override
  _i11.Future<List<int>> updateOrPutTransactionV2s(
          List<_i29.TransactionV2>? transactions) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateOrPutTransactionV2s,
          [transactions],
        ),
        returnValue: _i11.Future<List<int>>.value(<int>[]),
      ) as _i11.Future<List<int>>);
  @override
  _i9.QueryBuilder<_i28.EthContract, _i28.EthContract, _i9.QWhere>
      getEthContracts() => (super.noSuchMethod(
            Invocation.method(
              #getEthContracts,
              [],
            ),
            returnValue: _FakeQueryBuilder_8<_i28.EthContract, _i28.EthContract,
                _i9.QWhere>(
              this,
              Invocation.method(
                #getEthContracts,
                [],
              ),
            ),
          ) as _i9
              .QueryBuilder<_i28.EthContract, _i28.EthContract, _i9.QWhere>);
  @override
  _i11.Future<_i28.EthContract?> getEthContract(String? contractAddress) =>
      (super.noSuchMethod(
        Invocation.method(
          #getEthContract,
          [contractAddress],
        ),
        returnValue: _i11.Future<_i28.EthContract?>.value(),
      ) as _i11.Future<_i28.EthContract?>);
  @override
  _i28.EthContract? getEthContractSync(String? contractAddress) =>
      (super.noSuchMethod(Invocation.method(
        #getEthContractSync,
        [contractAddress],
      )) as _i28.EthContract?);
  @override
  _i11.Future<int> putEthContract(_i28.EthContract? contract) =>
      (super.noSuchMethod(
        Invocation.method(
          #putEthContract,
          [contract],
        ),
        returnValue: _i11.Future<int>.value(0),
      ) as _i11.Future<int>);
  @override
  _i11.Future<void> putEthContracts(List<_i28.EthContract>? contracts) =>
      (super.noSuchMethod(
        Invocation.method(
          #putEthContracts,
          [contracts],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);
  @override
  _i11.Future<int?> getHighestUsedMintIndex({required String? walletId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getHighestUsedMintIndex,
          [],
          {#walletId: walletId},
        ),
        returnValue: _i11.Future<int?>.value(),
      ) as _i11.Future<int?>);
}

/// A class which mocks [IThemeAssets].
///
/// See the documentation for Mockito's code generation for more information.
class MockIThemeAssets extends _i1.Mock implements _i24.IThemeAssets {
  MockIThemeAssets() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get bellNew => (super.noSuchMethod(
        Invocation.getter(#bellNew),
        returnValue: _i16.dummyValue<String>(
          this,
          Invocation.getter(#bellNew),
        ),
      ) as String);
  @override
  String get buy => (super.noSuchMethod(
        Invocation.getter(#buy),
        returnValue: _i16.dummyValue<String>(
          this,
          Invocation.getter(#buy),
        ),
      ) as String);
  @override
  String get exchange => (super.noSuchMethod(
        Invocation.getter(#exchange),
        returnValue: _i16.dummyValue<String>(
          this,
          Invocation.getter(#exchange),
        ),
      ) as String);
  @override
  String get personaIncognito => (super.noSuchMethod(
        Invocation.getter(#personaIncognito),
        returnValue: _i16.dummyValue<String>(
          this,
          Invocation.getter(#personaIncognito),
        ),
      ) as String);
  @override
  String get personaEasy => (super.noSuchMethod(
        Invocation.getter(#personaEasy),
        returnValue: _i16.dummyValue<String>(
          this,
          Invocation.getter(#personaEasy),
        ),
      ) as String);
  @override
  String get stack => (super.noSuchMethod(
        Invocation.getter(#stack),
        returnValue: _i16.dummyValue<String>(
          this,
          Invocation.getter(#stack),
        ),
      ) as String);
  @override
  String get stackIcon => (super.noSuchMethod(
        Invocation.getter(#stackIcon),
        returnValue: _i16.dummyValue<String>(
          this,
          Invocation.getter(#stackIcon),
        ),
      ) as String);
  @override
  String get receive => (super.noSuchMethod(
        Invocation.getter(#receive),
        returnValue: _i16.dummyValue<String>(
          this,
          Invocation.getter(#receive),
        ),
      ) as String);
  @override
  String get receivePending => (super.noSuchMethod(
        Invocation.getter(#receivePending),
        returnValue: _i16.dummyValue<String>(
          this,
          Invocation.getter(#receivePending),
        ),
      ) as String);
  @override
  String get receiveCancelled => (super.noSuchMethod(
        Invocation.getter(#receiveCancelled),
        returnValue: _i16.dummyValue<String>(
          this,
          Invocation.getter(#receiveCancelled),
        ),
      ) as String);
  @override
  String get send => (super.noSuchMethod(
        Invocation.getter(#send),
        returnValue: _i16.dummyValue<String>(
          this,
          Invocation.getter(#send),
        ),
      ) as String);
  @override
  String get sendPending => (super.noSuchMethod(
        Invocation.getter(#sendPending),
        returnValue: _i16.dummyValue<String>(
          this,
          Invocation.getter(#sendPending),
        ),
      ) as String);
  @override
  String get sendCancelled => (super.noSuchMethod(
        Invocation.getter(#sendCancelled),
        returnValue: _i16.dummyValue<String>(
          this,
          Invocation.getter(#sendCancelled),
        ),
      ) as String);
  @override
  String get themeSelector => (super.noSuchMethod(
        Invocation.getter(#themeSelector),
        returnValue: _i16.dummyValue<String>(
          this,
          Invocation.getter(#themeSelector),
        ),
      ) as String);
  @override
  String get themePreview => (super.noSuchMethod(
        Invocation.getter(#themePreview),
        returnValue: _i16.dummyValue<String>(
          this,
          Invocation.getter(#themePreview),
        ),
      ) as String);
  @override
  String get txExchange => (super.noSuchMethod(
        Invocation.getter(#txExchange),
        returnValue: _i16.dummyValue<String>(
          this,
          Invocation.getter(#txExchange),
        ),
      ) as String);
  @override
  String get txExchangePending => (super.noSuchMethod(
        Invocation.getter(#txExchangePending),
        returnValue: _i16.dummyValue<String>(
          this,
          Invocation.getter(#txExchangePending),
        ),
      ) as String);
  @override
  String get txExchangeFailed => (super.noSuchMethod(
        Invocation.getter(#txExchangeFailed),
        returnValue: _i16.dummyValue<String>(
          this,
          Invocation.getter(#txExchangeFailed),
        ),
      ) as String);
}
