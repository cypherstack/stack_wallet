// Mocks generated by Mockito 5.4.1 from annotations
// in stackwallet/test/widget_tests/transaction_card_test.dart.
// Do not manually edit this file.

// @dart=2.19

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i19;
import 'dart:typed_data' as _i34;
import 'dart:ui' as _i21;

import 'package:decimal/decimal.dart' as _i30;
import 'package:flutter/foundation.dart' as _i4;
import 'package:flutter_riverpod/flutter_riverpod.dart' as _i5;
import 'package:isar/isar.dart' as _i16;
import 'package:mockito/mockito.dart' as _i1;
import 'package:stackwallet/db/isar/main_db.dart' as _i14;
import 'package:stackwallet/electrumx_rpc/cached_electrumx.dart' as _i13;
import 'package:stackwallet/electrumx_rpc/electrumx.dart' as _i12;
import 'package:stackwallet/models/balance.dart' as _i9;
import 'package:stackwallet/models/isar/models/block_explorer.dart' as _i36;
import 'package:stackwallet/models/isar/models/contact_entry.dart' as _i35;
import 'package:stackwallet/models/isar/models/isar_models.dart' as _i22;
import 'package:stackwallet/models/isar/stack_theme.dart' as _i33;
import 'package:stackwallet/models/models.dart' as _i8;
import 'package:stackwallet/models/signing_data.dart' as _i24;
import 'package:stackwallet/services/coins/coin_service.dart' as _i7;
import 'package:stackwallet/services/coins/firo/firo_wallet.dart' as _i23;
import 'package:stackwallet/services/coins/manager.dart' as _i6;
import 'package:stackwallet/services/locale_service.dart' as _i25;
import 'package:stackwallet/services/node_service.dart' as _i3;
import 'package:stackwallet/services/notes_service.dart' as _i31;
import 'package:stackwallet/services/price_service.dart' as _i29;
import 'package:stackwallet/services/transaction_notification_tracker.dart'
    as _i11;
import 'package:stackwallet/services/wallets.dart' as _i17;
import 'package:stackwallet/services/wallets_service.dart' as _i2;
import 'package:stackwallet/themes/theme_service.dart' as _i32;
import 'package:stackwallet/utilities/amount/amount.dart' as _i10;
import 'package:stackwallet/utilities/amount/amount_unit.dart' as _i28;
import 'package:stackwallet/utilities/enums/backup_frequency_type.dart' as _i27;
import 'package:stackwallet/utilities/enums/coin_enum.dart' as _i18;
import 'package:stackwallet/utilities/enums/sync_type_enum.dart' as _i26;
import 'package:stackwallet/utilities/prefs.dart' as _i20;
import 'package:tuple/tuple.dart' as _i15;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeWalletsService_0 extends _i1.SmartFake
    implements _i2.WalletsService {
  _FakeWalletsService_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNodeService_1 extends _i1.SmartFake implements _i3.NodeService {
  _FakeNodeService_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeChangeNotifierProvider_2<Notifier extends _i4.ChangeNotifier?>
    extends _i1.SmartFake implements _i5.ChangeNotifierProvider<Notifier> {
  _FakeChangeNotifierProvider_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeManager_3 extends _i1.SmartFake implements _i6.Manager {
  _FakeManager_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCoinServiceAPI_4 extends _i1.SmartFake
    implements _i7.CoinServiceAPI {
  _FakeCoinServiceAPI_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFeeObject_5 extends _i1.SmartFake implements _i8.FeeObject {
  _FakeFeeObject_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBalance_6 extends _i1.SmartFake implements _i9.Balance {
  _FakeBalance_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAmount_7 extends _i1.SmartFake implements _i10.Amount {
  _FakeAmount_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTransactionNotificationTracker_8 extends _i1.SmartFake
    implements _i11.TransactionNotificationTracker {
  _FakeTransactionNotificationTracker_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeElectrumX_9 extends _i1.SmartFake implements _i12.ElectrumX {
  _FakeElectrumX_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCachedElectrumX_10 extends _i1.SmartFake
    implements _i13.CachedElectrumX {
  _FakeCachedElectrumX_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMainDB_11 extends _i1.SmartFake implements _i14.MainDB {
  _FakeMainDB_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDuration_12 extends _i1.SmartFake implements Duration {
  _FakeDuration_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTuple2_13<T1, T2> extends _i1.SmartFake
    implements _i15.Tuple2<T1, T2> {
  _FakeTuple2_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIsar_14 extends _i1.SmartFake implements _i16.Isar {
  _FakeIsar_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeQueryBuilder_15<OBJ, R, S> extends _i1.SmartFake
    implements _i16.QueryBuilder<OBJ, R, S> {
  _FakeQueryBuilder_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [Wallets].
///
/// See the documentation for Mockito's code generation for more information.
class MockWallets extends _i1.Mock implements _i17.Wallets {
  MockWallets() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.WalletsService get walletsService => (super.noSuchMethod(
        Invocation.getter(#walletsService),
        returnValue: _FakeWalletsService_0(
          this,
          Invocation.getter(#walletsService),
        ),
      ) as _i2.WalletsService);
  @override
  set walletsService(_i2.WalletsService? _walletsService) => super.noSuchMethod(
        Invocation.setter(
          #walletsService,
          _walletsService,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.NodeService get nodeService => (super.noSuchMethod(
        Invocation.getter(#nodeService),
        returnValue: _FakeNodeService_1(
          this,
          Invocation.getter(#nodeService),
        ),
      ) as _i3.NodeService);
  @override
  set nodeService(_i3.NodeService? _nodeService) => super.noSuchMethod(
        Invocation.setter(
          #nodeService,
          _nodeService,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get hasWallets => (super.noSuchMethod(
        Invocation.getter(#hasWallets),
        returnValue: false,
      ) as bool);
  @override
  List<_i5.ChangeNotifierProvider<_i6.Manager>> get managerProviders =>
      (super.noSuchMethod(
        Invocation.getter(#managerProviders),
        returnValue: <_i5.ChangeNotifierProvider<_i6.Manager>>[],
      ) as List<_i5.ChangeNotifierProvider<_i6.Manager>>);
  @override
  List<_i6.Manager> get managers => (super.noSuchMethod(
        Invocation.getter(#managers),
        returnValue: <_i6.Manager>[],
      ) as List<_i6.Manager>);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<String> getWalletIdsFor({required _i18.Coin? coin}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWalletIdsFor,
          [],
          {#coin: coin},
        ),
        returnValue: <String>[],
      ) as List<String>);
  @override
  List<_i15.Tuple2<_i18.Coin, List<_i5.ChangeNotifierProvider<_i6.Manager>>>>
      getManagerProvidersByCoin() => (super.noSuchMethod(
            Invocation.method(
              #getManagerProvidersByCoin,
              [],
            ),
            returnValue: <_i15.Tuple2<_i18.Coin,
                List<_i5.ChangeNotifierProvider<_i6.Manager>>>>[],
          ) as List<
              _i15.Tuple2<_i18.Coin,
                  List<_i5.ChangeNotifierProvider<_i6.Manager>>>>);
  @override
  List<_i5.ChangeNotifierProvider<_i6.Manager>> getManagerProvidersForCoin(
          _i18.Coin? coin) =>
      (super.noSuchMethod(
        Invocation.method(
          #getManagerProvidersForCoin,
          [coin],
        ),
        returnValue: <_i5.ChangeNotifierProvider<_i6.Manager>>[],
      ) as List<_i5.ChangeNotifierProvider<_i6.Manager>>);
  @override
  _i5.ChangeNotifierProvider<_i6.Manager> getManagerProvider(
          String? walletId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getManagerProvider,
          [walletId],
        ),
        returnValue: _FakeChangeNotifierProvider_2<_i6.Manager>(
          this,
          Invocation.method(
            #getManagerProvider,
            [walletId],
          ),
        ),
      ) as _i5.ChangeNotifierProvider<_i6.Manager>);
  @override
  _i6.Manager getManager(String? walletId) => (super.noSuchMethod(
        Invocation.method(
          #getManager,
          [walletId],
        ),
        returnValue: _FakeManager_3(
          this,
          Invocation.method(
            #getManager,
            [walletId],
          ),
        ),
      ) as _i6.Manager);
  @override
  void addWallet({
    required String? walletId,
    required _i6.Manager? manager,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #addWallet,
          [],
          {
            #walletId: walletId,
            #manager: manager,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeWallet({required String? walletId}) => super.noSuchMethod(
        Invocation.method(
          #removeWallet,
          [],
          {#walletId: walletId},
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i19.Future<void> load(_i20.Prefs? prefs) => (super.noSuchMethod(
        Invocation.method(
          #load,
          [prefs],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  _i19.Future<void> loadAfterStackRestore(
    _i20.Prefs? prefs,
    List<_i6.Manager>? managers,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #loadAfterStackRestore,
          [
            prefs,
            managers,
          ],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  void addListener(_i21.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i21.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [Manager].
///
/// See the documentation for Mockito's code generation for more information.
class MockManager extends _i1.Mock implements _i6.Manager {
  MockManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isActiveWallet => (super.noSuchMethod(
        Invocation.getter(#isActiveWallet),
        returnValue: false,
      ) as bool);
  @override
  set isActiveWallet(bool? isActive) => super.noSuchMethod(
        Invocation.setter(
          #isActiveWallet,
          isActive,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i7.CoinServiceAPI get wallet => (super.noSuchMethod(
        Invocation.getter(#wallet),
        returnValue: _FakeCoinServiceAPI_4(
          this,
          Invocation.getter(#wallet),
        ),
      ) as _i7.CoinServiceAPI);
  @override
  bool get hasBackgroundRefreshListener => (super.noSuchMethod(
        Invocation.getter(#hasBackgroundRefreshListener),
        returnValue: false,
      ) as bool);
  @override
  _i18.Coin get coin => (super.noSuchMethod(
        Invocation.getter(#coin),
        returnValue: _i18.Coin.bitcoin,
      ) as _i18.Coin);
  @override
  bool get isRefreshing => (super.noSuchMethod(
        Invocation.getter(#isRefreshing),
        returnValue: false,
      ) as bool);
  @override
  bool get shouldAutoSync => (super.noSuchMethod(
        Invocation.getter(#shouldAutoSync),
        returnValue: false,
      ) as bool);
  @override
  set shouldAutoSync(bool? shouldAutoSync) => super.noSuchMethod(
        Invocation.setter(
          #shouldAutoSync,
          shouldAutoSync,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get isFavorite => (super.noSuchMethod(
        Invocation.getter(#isFavorite),
        returnValue: false,
      ) as bool);
  @override
  set isFavorite(bool? markFavorite) => super.noSuchMethod(
        Invocation.setter(
          #isFavorite,
          markFavorite,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i19.Future<_i8.FeeObject> get fees => (super.noSuchMethod(
        Invocation.getter(#fees),
        returnValue: _i19.Future<_i8.FeeObject>.value(_FakeFeeObject_5(
          this,
          Invocation.getter(#fees),
        )),
      ) as _i19.Future<_i8.FeeObject>);
  @override
  _i19.Future<int> get maxFee => (super.noSuchMethod(
        Invocation.getter(#maxFee),
        returnValue: _i19.Future<int>.value(0),
      ) as _i19.Future<int>);
  @override
  _i19.Future<String> get currentReceivingAddress => (super.noSuchMethod(
        Invocation.getter(#currentReceivingAddress),
        returnValue: _i19.Future<String>.value(''),
      ) as _i19.Future<String>);
  @override
  _i9.Balance get balance => (super.noSuchMethod(
        Invocation.getter(#balance),
        returnValue: _FakeBalance_6(
          this,
          Invocation.getter(#balance),
        ),
      ) as _i9.Balance);
  @override
  _i19.Future<List<_i22.Transaction>> get transactions => (super.noSuchMethod(
        Invocation.getter(#transactions),
        returnValue:
            _i19.Future<List<_i22.Transaction>>.value(<_i22.Transaction>[]),
      ) as _i19.Future<List<_i22.Transaction>>);
  @override
  _i19.Future<List<_i22.UTXO>> get utxos => (super.noSuchMethod(
        Invocation.getter(#utxos),
        returnValue: _i19.Future<List<_i22.UTXO>>.value(<_i22.UTXO>[]),
      ) as _i19.Future<List<_i22.UTXO>>);
  @override
  set walletName(String? newName) => super.noSuchMethod(
        Invocation.setter(
          #walletName,
          newName,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get walletName => (super.noSuchMethod(
        Invocation.getter(#walletName),
        returnValue: '',
      ) as String);
  @override
  String get walletId => (super.noSuchMethod(
        Invocation.getter(#walletId),
        returnValue: '',
      ) as String);
  @override
  _i19.Future<List<String>> get mnemonic => (super.noSuchMethod(
        Invocation.getter(#mnemonic),
        returnValue: _i19.Future<List<String>>.value(<String>[]),
      ) as _i19.Future<List<String>>);
  @override
  _i19.Future<String?> get mnemonicPassphrase => (super.noSuchMethod(
        Invocation.getter(#mnemonicPassphrase),
        returnValue: _i19.Future<String?>.value(),
      ) as _i19.Future<String?>);
  @override
  bool get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: false,
      ) as bool);
  @override
  int get currentHeight => (super.noSuchMethod(
        Invocation.getter(#currentHeight),
        returnValue: 0,
      ) as int);
  @override
  bool get hasPaynymSupport => (super.noSuchMethod(
        Invocation.getter(#hasPaynymSupport),
        returnValue: false,
      ) as bool);
  @override
  bool get hasCoinControlSupport => (super.noSuchMethod(
        Invocation.getter(#hasCoinControlSupport),
        returnValue: false,
      ) as bool);
  @override
  bool get hasTokenSupport => (super.noSuchMethod(
        Invocation.getter(#hasTokenSupport),
        returnValue: false,
      ) as bool);
  @override
  bool get hasWhirlpoolSupport => (super.noSuchMethod(
        Invocation.getter(#hasWhirlpoolSupport),
        returnValue: false,
      ) as bool);
  @override
  int get rescanOnOpenVersion => (super.noSuchMethod(
        Invocation.getter(#rescanOnOpenVersion),
        returnValue: 0,
      ) as int);
  @override
  bool get hasXPub => (super.noSuchMethod(
        Invocation.getter(#hasXPub),
        returnValue: false,
      ) as bool);
  @override
  _i19.Future<String> get xpub => (super.noSuchMethod(
        Invocation.getter(#xpub),
        returnValue: _i19.Future<String>.value(''),
      ) as _i19.Future<String>);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  _i19.Future<void> updateNode(bool? shouldRefresh) => (super.noSuchMethod(
        Invocation.method(
          #updateNode,
          [shouldRefresh],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i19.Future<Map<String, dynamic>> prepareSend({
    required String? address,
    required _i10.Amount? amount,
    Map<String, dynamic>? args,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #prepareSend,
          [],
          {
            #address: address,
            #amount: amount,
            #args: args,
          },
        ),
        returnValue:
            _i19.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i19.Future<Map<String, dynamic>>);
  @override
  _i19.Future<String> confirmSend({required Map<String, dynamic>? txData}) =>
      (super.noSuchMethod(
        Invocation.method(
          #confirmSend,
          [],
          {#txData: txData},
        ),
        returnValue: _i19.Future<String>.value(''),
      ) as _i19.Future<String>);
  @override
  _i19.Future<void> refresh() => (super.noSuchMethod(
        Invocation.method(
          #refresh,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  bool validateAddress(String? address) => (super.noSuchMethod(
        Invocation.method(
          #validateAddress,
          [address],
        ),
        returnValue: false,
      ) as bool);
  @override
  _i19.Future<bool> testNetworkConnection() => (super.noSuchMethod(
        Invocation.method(
          #testNetworkConnection,
          [],
        ),
        returnValue: _i19.Future<bool>.value(false),
      ) as _i19.Future<bool>);
  @override
  _i19.Future<void> initializeNew() => (super.noSuchMethod(
        Invocation.method(
          #initializeNew,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  _i19.Future<void> initializeExisting() => (super.noSuchMethod(
        Invocation.method(
          #initializeExisting,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  _i19.Future<void> recoverFromMnemonic({
    required String? mnemonic,
    String? mnemonicPassphrase,
    required int? maxUnusedAddressGap,
    required int? maxNumberOfIndexesToCheck,
    required int? height,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #recoverFromMnemonic,
          [],
          {
            #mnemonic: mnemonic,
            #mnemonicPassphrase: mnemonicPassphrase,
            #maxUnusedAddressGap: maxUnusedAddressGap,
            #maxNumberOfIndexesToCheck: maxNumberOfIndexesToCheck,
            #height: height,
          },
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  _i19.Future<void> exitCurrentWallet() => (super.noSuchMethod(
        Invocation.method(
          #exitCurrentWallet,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  _i19.Future<void> fullRescan(
    int? maxUnusedAddressGap,
    int? maxNumberOfIndexesToCheck,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #fullRescan,
          [
            maxUnusedAddressGap,
            maxNumberOfIndexesToCheck,
          ],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  _i19.Future<_i10.Amount> estimateFeeFor(
    _i10.Amount? amount,
    int? feeRate,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #estimateFeeFor,
          [
            amount,
            feeRate,
          ],
        ),
        returnValue: _i19.Future<_i10.Amount>.value(_FakeAmount_7(
          this,
          Invocation.method(
            #estimateFeeFor,
            [
              amount,
              feeRate,
            ],
          ),
        )),
      ) as _i19.Future<_i10.Amount>);
  @override
  _i19.Future<bool> generateNewAddress() => (super.noSuchMethod(
        Invocation.method(
          #generateNewAddress,
          [],
        ),
        returnValue: _i19.Future<bool>.value(false),
      ) as _i19.Future<bool>);
  @override
  _i19.Future<void> resetRescanOnOpen() => (super.noSuchMethod(
        Invocation.method(
          #resetRescanOnOpen,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  void addListener(_i21.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i21.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [CoinServiceAPI].
///
/// See the documentation for Mockito's code generation for more information.
class MockCoinServiceAPI extends _i1.Mock implements _i7.CoinServiceAPI {
  MockCoinServiceAPI() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set onIsActiveWalletChanged(void Function(bool)? _onIsActiveWalletChanged) =>
      super.noSuchMethod(
        Invocation.setter(
          #onIsActiveWalletChanged,
          _onIsActiveWalletChanged,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i18.Coin get coin => (super.noSuchMethod(
        Invocation.getter(#coin),
        returnValue: _i18.Coin.bitcoin,
      ) as _i18.Coin);
  @override
  bool get isRefreshing => (super.noSuchMethod(
        Invocation.getter(#isRefreshing),
        returnValue: false,
      ) as bool);
  @override
  bool get shouldAutoSync => (super.noSuchMethod(
        Invocation.getter(#shouldAutoSync),
        returnValue: false,
      ) as bool);
  @override
  set shouldAutoSync(bool? shouldAutoSync) => super.noSuchMethod(
        Invocation.setter(
          #shouldAutoSync,
          shouldAutoSync,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get isFavorite => (super.noSuchMethod(
        Invocation.getter(#isFavorite),
        returnValue: false,
      ) as bool);
  @override
  set isFavorite(bool? markFavorite) => super.noSuchMethod(
        Invocation.setter(
          #isFavorite,
          markFavorite,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i19.Future<_i8.FeeObject> get fees => (super.noSuchMethod(
        Invocation.getter(#fees),
        returnValue: _i19.Future<_i8.FeeObject>.value(_FakeFeeObject_5(
          this,
          Invocation.getter(#fees),
        )),
      ) as _i19.Future<_i8.FeeObject>);
  @override
  _i19.Future<int> get maxFee => (super.noSuchMethod(
        Invocation.getter(#maxFee),
        returnValue: _i19.Future<int>.value(0),
      ) as _i19.Future<int>);
  @override
  _i19.Future<String> get currentReceivingAddress => (super.noSuchMethod(
        Invocation.getter(#currentReceivingAddress),
        returnValue: _i19.Future<String>.value(''),
      ) as _i19.Future<String>);
  @override
  _i9.Balance get balance => (super.noSuchMethod(
        Invocation.getter(#balance),
        returnValue: _FakeBalance_6(
          this,
          Invocation.getter(#balance),
        ),
      ) as _i9.Balance);
  @override
  _i19.Future<List<_i22.Transaction>> get transactions => (super.noSuchMethod(
        Invocation.getter(#transactions),
        returnValue:
            _i19.Future<List<_i22.Transaction>>.value(<_i22.Transaction>[]),
      ) as _i19.Future<List<_i22.Transaction>>);
  @override
  _i19.Future<List<_i22.UTXO>> get utxos => (super.noSuchMethod(
        Invocation.getter(#utxos),
        returnValue: _i19.Future<List<_i22.UTXO>>.value(<_i22.UTXO>[]),
      ) as _i19.Future<List<_i22.UTXO>>);
  @override
  set walletName(String? newName) => super.noSuchMethod(
        Invocation.setter(
          #walletName,
          newName,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get walletName => (super.noSuchMethod(
        Invocation.getter(#walletName),
        returnValue: '',
      ) as String);
  @override
  String get walletId => (super.noSuchMethod(
        Invocation.getter(#walletId),
        returnValue: '',
      ) as String);
  @override
  _i19.Future<List<String>> get mnemonic => (super.noSuchMethod(
        Invocation.getter(#mnemonic),
        returnValue: _i19.Future<List<String>>.value(<String>[]),
      ) as _i19.Future<List<String>>);
  @override
  _i19.Future<String?> get mnemonicString => (super.noSuchMethod(
        Invocation.getter(#mnemonicString),
        returnValue: _i19.Future<String?>.value(),
      ) as _i19.Future<String?>);
  @override
  _i19.Future<String?> get mnemonicPassphrase => (super.noSuchMethod(
        Invocation.getter(#mnemonicPassphrase),
        returnValue: _i19.Future<String?>.value(),
      ) as _i19.Future<String?>);
  @override
  bool get hasCalledExit => (super.noSuchMethod(
        Invocation.getter(#hasCalledExit),
        returnValue: false,
      ) as bool);
  @override
  bool get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: false,
      ) as bool);
  @override
  int get storedChainHeight => (super.noSuchMethod(
        Invocation.getter(#storedChainHeight),
        returnValue: 0,
      ) as int);
  @override
  _i19.Future<Map<String, dynamic>> prepareSend({
    required String? address,
    required _i10.Amount? amount,
    Map<String, dynamic>? args,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #prepareSend,
          [],
          {
            #address: address,
            #amount: amount,
            #args: args,
          },
        ),
        returnValue:
            _i19.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i19.Future<Map<String, dynamic>>);
  @override
  _i19.Future<String> confirmSend({required Map<String, dynamic>? txData}) =>
      (super.noSuchMethod(
        Invocation.method(
          #confirmSend,
          [],
          {#txData: txData},
        ),
        returnValue: _i19.Future<String>.value(''),
      ) as _i19.Future<String>);
  @override
  _i19.Future<void> refresh() => (super.noSuchMethod(
        Invocation.method(
          #refresh,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  _i19.Future<void> updateNode(bool? shouldRefresh) => (super.noSuchMethod(
        Invocation.method(
          #updateNode,
          [shouldRefresh],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  bool validateAddress(String? address) => (super.noSuchMethod(
        Invocation.method(
          #validateAddress,
          [address],
        ),
        returnValue: false,
      ) as bool);
  @override
  _i19.Future<bool> testNetworkConnection() => (super.noSuchMethod(
        Invocation.method(
          #testNetworkConnection,
          [],
        ),
        returnValue: _i19.Future<bool>.value(false),
      ) as _i19.Future<bool>);
  @override
  _i19.Future<void> recoverFromMnemonic({
    required String? mnemonic,
    String? mnemonicPassphrase,
    required int? maxUnusedAddressGap,
    required int? maxNumberOfIndexesToCheck,
    required int? height,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #recoverFromMnemonic,
          [],
          {
            #mnemonic: mnemonic,
            #mnemonicPassphrase: mnemonicPassphrase,
            #maxUnusedAddressGap: maxUnusedAddressGap,
            #maxNumberOfIndexesToCheck: maxNumberOfIndexesToCheck,
            #height: height,
          },
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  _i19.Future<void> initializeNew() => (super.noSuchMethod(
        Invocation.method(
          #initializeNew,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  _i19.Future<void> initializeExisting() => (super.noSuchMethod(
        Invocation.method(
          #initializeExisting,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  _i19.Future<void> exit() => (super.noSuchMethod(
        Invocation.method(
          #exit,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  _i19.Future<void> fullRescan(
    int? maxUnusedAddressGap,
    int? maxNumberOfIndexesToCheck,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #fullRescan,
          [
            maxUnusedAddressGap,
            maxNumberOfIndexesToCheck,
          ],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  _i19.Future<_i10.Amount> estimateFeeFor(
    _i10.Amount? amount,
    int? feeRate,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #estimateFeeFor,
          [
            amount,
            feeRate,
          ],
        ),
        returnValue: _i19.Future<_i10.Amount>.value(_FakeAmount_7(
          this,
          Invocation.method(
            #estimateFeeFor,
            [
              amount,
              feeRate,
            ],
          ),
        )),
      ) as _i19.Future<_i10.Amount>);
  @override
  _i19.Future<bool> generateNewAddress() => (super.noSuchMethod(
        Invocation.method(
          #generateNewAddress,
          [],
        ),
        returnValue: _i19.Future<bool>.value(false),
      ) as _i19.Future<bool>);
  @override
  _i19.Future<void> updateSentCachedTxData(Map<String, dynamic>? txData) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateSentCachedTxData,
          [txData],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
}

/// A class which mocks [FiroWallet].
///
/// See the documentation for Mockito's code generation for more information.
class MockFiroWallet extends _i1.Mock implements _i23.FiroWallet {
  MockFiroWallet() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set timer(_i19.Timer? _timer) => super.noSuchMethod(
        Invocation.setter(
          #timer,
          _timer,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i11.TransactionNotificationTracker get txTracker => (super.noSuchMethod(
        Invocation.getter(#txTracker),
        returnValue: _FakeTransactionNotificationTracker_8(
          this,
          Invocation.getter(#txTracker),
        ),
      ) as _i11.TransactionNotificationTracker);
  @override
  set txTracker(_i11.TransactionNotificationTracker? _txTracker) =>
      super.noSuchMethod(
        Invocation.setter(
          #txTracker,
          _txTracker,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get refreshMutex => (super.noSuchMethod(
        Invocation.getter(#refreshMutex),
        returnValue: false,
      ) as bool);
  @override
  set refreshMutex(bool? _refreshMutex) => super.noSuchMethod(
        Invocation.setter(
          #refreshMutex,
          _refreshMutex,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get longMutex => (super.noSuchMethod(
        Invocation.getter(#longMutex),
        returnValue: false,
      ) as bool);
  @override
  set longMutex(bool? _longMutex) => super.noSuchMethod(
        Invocation.setter(
          #longMutex,
          _longMutex,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get isActive => (super.noSuchMethod(
        Invocation.getter(#isActive),
        returnValue: false,
      ) as bool);
  @override
  set isActive(bool? _isActive) => super.noSuchMethod(
        Invocation.setter(
          #isActive,
          _isActive,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get shouldAutoSync => (super.noSuchMethod(
        Invocation.getter(#shouldAutoSync),
        returnValue: false,
      ) as bool);
  @override
  set shouldAutoSync(bool? shouldAutoSync) => super.noSuchMethod(
        Invocation.setter(
          #shouldAutoSync,
          shouldAutoSync,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set isFavorite(bool? markFavorite) => super.noSuchMethod(
        Invocation.setter(
          #isFavorite,
          markFavorite,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get isFavorite => (super.noSuchMethod(
        Invocation.getter(#isFavorite),
        returnValue: false,
      ) as bool);
  @override
  _i18.Coin get coin => (super.noSuchMethod(
        Invocation.getter(#coin),
        returnValue: _i18.Coin.bitcoin,
      ) as _i18.Coin);
  @override
  _i19.Future<List<String>> get mnemonic => (super.noSuchMethod(
        Invocation.getter(#mnemonic),
        returnValue: _i19.Future<List<String>>.value(<String>[]),
      ) as _i19.Future<List<String>>);
  @override
  _i19.Future<String?> get mnemonicString => (super.noSuchMethod(
        Invocation.getter(#mnemonicString),
        returnValue: _i19.Future<String?>.value(),
      ) as _i19.Future<String?>);
  @override
  _i19.Future<String?> get mnemonicPassphrase => (super.noSuchMethod(
        Invocation.getter(#mnemonicPassphrase),
        returnValue: _i19.Future<String?>.value(),
      ) as _i19.Future<String?>);
  @override
  _i19.Future<int> get maxFee => (super.noSuchMethod(
        Invocation.getter(#maxFee),
        returnValue: _i19.Future<int>.value(0),
      ) as _i19.Future<int>);
  @override
  _i19.Future<_i8.FeeObject> get fees => (super.noSuchMethod(
        Invocation.getter(#fees),
        returnValue: _i19.Future<_i8.FeeObject>.value(_FakeFeeObject_5(
          this,
          Invocation.getter(#fees),
        )),
      ) as _i19.Future<_i8.FeeObject>);
  @override
  _i19.Future<String> get currentReceivingAddress => (super.noSuchMethod(
        Invocation.getter(#currentReceivingAddress),
        returnValue: _i19.Future<String>.value(''),
      ) as _i19.Future<String>);
  @override
  _i19.Future<String> get currentChangeAddress => (super.noSuchMethod(
        Invocation.getter(#currentChangeAddress),
        returnValue: _i19.Future<String>.value(''),
      ) as _i19.Future<String>);
  @override
  String get walletName => (super.noSuchMethod(
        Invocation.getter(#walletName),
        returnValue: '',
      ) as String);
  @override
  set walletName(String? newName) => super.noSuchMethod(
        Invocation.setter(
          #walletName,
          newName,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get walletId => (super.noSuchMethod(
        Invocation.getter(#walletId),
        returnValue: '',
      ) as String);
  @override
  bool get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: false,
      ) as bool);
  @override
  _i12.ElectrumX get electrumXClient => (super.noSuchMethod(
        Invocation.getter(#electrumXClient),
        returnValue: _FakeElectrumX_9(
          this,
          Invocation.getter(#electrumXClient),
        ),
      ) as _i12.ElectrumX);
  @override
  _i13.CachedElectrumX get cachedElectrumXClient => (super.noSuchMethod(
        Invocation.getter(#cachedElectrumXClient),
        returnValue: _FakeCachedElectrumX_10(
          this,
          Invocation.getter(#cachedElectrumXClient),
        ),
      ) as _i13.CachedElectrumX);
  @override
  bool get isRefreshing => (super.noSuchMethod(
        Invocation.getter(#isRefreshing),
        returnValue: false,
      ) as bool);
  @override
  bool get hasCalledExit => (super.noSuchMethod(
        Invocation.getter(#hasCalledExit),
        returnValue: false,
      ) as bool);
  @override
  _i19.Future<int> get chainHeight => (super.noSuchMethod(
        Invocation.getter(#chainHeight),
        returnValue: _i19.Future<int>.value(0),
      ) as _i19.Future<int>);
  @override
  int get storedChainHeight => (super.noSuchMethod(
        Invocation.getter(#storedChainHeight),
        returnValue: 0,
      ) as int);
  @override
  _i9.Balance get balance => (super.noSuchMethod(
        Invocation.getter(#balance),
        returnValue: _FakeBalance_6(
          this,
          Invocation.getter(#balance),
        ),
      ) as _i9.Balance);
  @override
  _i9.Balance get balancePrivate => (super.noSuchMethod(
        Invocation.getter(#balancePrivate),
        returnValue: _FakeBalance_6(
          this,
          Invocation.getter(#balancePrivate),
        ),
      ) as _i9.Balance);
  @override
  _i19.Future<List<_i22.UTXO>> get utxos => (super.noSuchMethod(
        Invocation.getter(#utxos),
        returnValue: _i19.Future<List<_i22.UTXO>>.value(<_i22.UTXO>[]),
      ) as _i19.Future<List<_i22.UTXO>>);
  @override
  _i19.Future<List<_i22.Transaction>> get transactions => (super.noSuchMethod(
        Invocation.getter(#transactions),
        returnValue:
            _i19.Future<List<_i22.Transaction>>.value(<_i22.Transaction>[]),
      ) as _i19.Future<List<_i22.Transaction>>);
  @override
  _i19.Future<String> get xpub => (super.noSuchMethod(
        Invocation.getter(#xpub),
        returnValue: _i19.Future<String>.value(''),
      ) as _i19.Future<String>);
  @override
  set onIsActiveWalletChanged(void Function(bool)? _onIsActiveWalletChanged) =>
      super.noSuchMethod(
        Invocation.setter(
          #onIsActiveWalletChanged,
          _onIsActiveWalletChanged,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i14.MainDB get db => (super.noSuchMethod(
        Invocation.getter(#db),
        returnValue: _FakeMainDB_11(
          this,
          Invocation.getter(#db),
        ),
      ) as _i14.MainDB);
  @override
  bool validateAddress(String? address) => (super.noSuchMethod(
        Invocation.method(
          #validateAddress,
          [address],
        ),
        returnValue: false,
      ) as bool);
  @override
  _i19.Future<void> updateSentCachedTxData(Map<String, dynamic>? txData) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateSentCachedTxData,
          [txData],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  _i19.Future<bool> testNetworkConnection() => (super.noSuchMethod(
        Invocation.method(
          #testNetworkConnection,
          [],
        ),
        returnValue: _i19.Future<bool>.value(false),
      ) as _i19.Future<bool>);
  @override
  void startNetworkAlivePinging() => super.noSuchMethod(
        Invocation.method(
          #startNetworkAlivePinging,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void stopNetworkAlivePinging() => super.noSuchMethod(
        Invocation.method(
          #stopNetworkAlivePinging,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i19.Future<Map<String, dynamic>> prepareSendPublic({
    required String? address,
    required _i10.Amount? amount,
    Map<String, dynamic>? args,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #prepareSendPublic,
          [],
          {
            #address: address,
            #amount: amount,
            #args: args,
          },
        ),
        returnValue:
            _i19.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i19.Future<Map<String, dynamic>>);
  @override
  _i19.Future<String> confirmSendPublic({dynamic txData}) =>
      (super.noSuchMethod(
        Invocation.method(
          #confirmSendPublic,
          [],
          {#txData: txData},
        ),
        returnValue: _i19.Future<String>.value(''),
      ) as _i19.Future<String>);
  @override
  _i19.Future<Map<String, dynamic>> prepareSend({
    required String? address,
    required _i10.Amount? amount,
    Map<String, dynamic>? args,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #prepareSend,
          [],
          {
            #address: address,
            #amount: amount,
            #args: args,
          },
        ),
        returnValue:
            _i19.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i19.Future<Map<String, dynamic>>);
  @override
  _i19.Future<String> confirmSend({required Map<String, dynamic>? txData}) =>
      (super.noSuchMethod(
        Invocation.method(
          #confirmSend,
          [],
          {#txData: txData},
        ),
        returnValue: _i19.Future<String>.value(''),
      ) as _i19.Future<String>);
  @override
  int estimateTxFee({
    required int? vSize,
    required int? feeRatePerKB,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #estimateTxFee,
          [],
          {
            #vSize: vSize,
            #feeRatePerKB: feeRatePerKB,
          },
        ),
        returnValue: 0,
      ) as int);
  @override
  dynamic coinSelection(
    int? satoshiAmountToSend,
    int? selectedTxFeeRate,
    String? _recipientAddress,
    bool? isSendAll, {
    int? satsPerVByte,
    int? additionalOutputs = 0,
    List<_i22.UTXO>? utxos,
  }) =>
      super.noSuchMethod(Invocation.method(
        #coinSelection,
        [
          satoshiAmountToSend,
          selectedTxFeeRate,
          _recipientAddress,
          isSendAll,
        ],
        {
          #satsPerVByte: satsPerVByte,
          #additionalOutputs: additionalOutputs,
          #utxos: utxos,
        },
      ));
  @override
  _i19.Future<List<_i24.SigningData>> fetchBuildTxData(
          List<_i22.UTXO>? utxosToUse) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchBuildTxData,
          [utxosToUse],
        ),
        returnValue:
            _i19.Future<List<_i24.SigningData>>.value(<_i24.SigningData>[]),
      ) as _i19.Future<List<_i24.SigningData>>);
  @override
  _i19.Future<Map<String, dynamic>> buildTransaction({
    required List<_i24.SigningData>? utxoSigningData,
    required List<String>? recipients,
    required List<int>? satoshiAmounts,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #buildTransaction,
          [],
          {
            #utxoSigningData: utxoSigningData,
            #recipients: recipients,
            #satoshiAmounts: satoshiAmounts,
          },
        ),
        returnValue:
            _i19.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i19.Future<Map<String, dynamic>>);
  @override
  _i19.Future<void> updateNode(bool? shouldRefresh) => (super.noSuchMethod(
        Invocation.method(
          #updateNode,
          [shouldRefresh],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  _i19.Future<void> initializeNew() => (super.noSuchMethod(
        Invocation.method(
          #initializeNew,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  _i19.Future<void> initializeExisting() => (super.noSuchMethod(
        Invocation.method(
          #initializeExisting,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  _i19.Future<bool> refreshIfThereIsNewData() => (super.noSuchMethod(
        Invocation.method(
          #refreshIfThereIsNewData,
          [],
        ),
        returnValue: _i19.Future<bool>.value(false),
      ) as _i19.Future<bool>);
  @override
  _i19.Future<void> getAllTxsToWatch() => (super.noSuchMethod(
        Invocation.method(
          #getAllTxsToWatch,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  _i19.Future<void> refresh() => (super.noSuchMethod(
        Invocation.method(
          #refresh,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  List<Map<dynamic, _i8.LelantusCoin>> getLelantusCoinMap() =>
      (super.noSuchMethod(
        Invocation.method(
          #getLelantusCoinMap,
          [],
        ),
        returnValue: <Map<dynamic, _i8.LelantusCoin>>[],
      ) as List<Map<dynamic, _i8.LelantusCoin>>);
  @override
  _i19.Future<void> anonymizeAllPublicFunds() => (super.noSuchMethod(
        Invocation.method(
          #anonymizeAllPublicFunds,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  _i19.Future<List<Map<String, dynamic>>> createMintsFromAmount(int? total) =>
      (super.noSuchMethod(
        Invocation.method(
          #createMintsFromAmount,
          [total],
        ),
        returnValue: _i19.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i19.Future<List<Map<String, dynamic>>>);
  @override
  _i19.Future<String> submitHexToNetwork(String? hex) => (super.noSuchMethod(
        Invocation.method(
          #submitHexToNetwork,
          [hex],
        ),
        returnValue: _i19.Future<String>.value(''),
      ) as _i19.Future<String>);
  @override
  _i19.Future<Map<String, dynamic>> buildMintTransaction(
    List<_i22.UTXO>? utxosToUse,
    int? satoshisPerRecipient,
    List<Map<String, dynamic>>? mintsMap,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #buildMintTransaction,
          [
            utxosToUse,
            satoshisPerRecipient,
            mintsMap,
          ],
        ),
        returnValue:
            _i19.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i19.Future<Map<String, dynamic>>);
  @override
  _i19.Future<void> checkReceivingAddressForTransactions() =>
      (super.noSuchMethod(
        Invocation.method(
          #checkReceivingAddressForTransactions,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  _i19.Future<void> checkChangeAddressForTransactions() => (super.noSuchMethod(
        Invocation.method(
          #checkChangeAddressForTransactions,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  _i19.Future<void> fullRescan(
    int? maxUnusedAddressGap,
    int? maxNumberOfIndexesToCheck,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #fullRescan,
          [
            maxUnusedAddressGap,
            maxNumberOfIndexesToCheck,
          ],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  _i19.Future<void> recoverFromMnemonic({
    required String? mnemonic,
    String? mnemonicPassphrase,
    required int? maxUnusedAddressGap,
    required int? maxNumberOfIndexesToCheck,
    required int? height,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #recoverFromMnemonic,
          [],
          {
            #mnemonic: mnemonic,
            #mnemonicPassphrase: mnemonicPassphrase,
            #maxUnusedAddressGap: maxUnusedAddressGap,
            #maxNumberOfIndexesToCheck: maxNumberOfIndexesToCheck,
            #height: height,
          },
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  _i19.Future<Map<int, dynamic>> getSetDataMap(int? latestSetId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSetDataMap,
          [latestSetId],
        ),
        returnValue: _i19.Future<Map<int, dynamic>>.value(<int, dynamic>{}),
      ) as _i19.Future<Map<int, dynamic>>);
  @override
  _i19.Future<void> getTransactionCacheEarly(List<String>? allAddresses) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTransactionCacheEarly,
          [allAddresses],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  _i19.Future<List<Map<String, dynamic>>> fetchAnonymitySets() =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchAnonymitySets,
          [],
        ),
        returnValue: _i19.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i19.Future<List<Map<String, dynamic>>>);
  @override
  _i19.Future<int> getLatestSetId() => (super.noSuchMethod(
        Invocation.method(
          #getLatestSetId,
          [],
        ),
        returnValue: _i19.Future<int>.value(0),
      ) as _i19.Future<int>);
  @override
  _i19.Future<List<String>> getUsedCoinSerials() => (super.noSuchMethod(
        Invocation.method(
          #getUsedCoinSerials,
          [],
        ),
        returnValue: _i19.Future<List<String>>.value(<String>[]),
      ) as _i19.Future<List<String>>);
  @override
  _i19.Future<void> exit() => (super.noSuchMethod(
        Invocation.method(
          #exit,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  _i19.Future<dynamic> getCoinsToJoinSplit(int? required) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCoinsToJoinSplit,
          [required],
        ),
        returnValue: _i19.Future<dynamic>.value(),
      ) as _i19.Future<dynamic>);
  @override
  _i19.Future<int> estimateJoinSplitFee(int? spendAmount) =>
      (super.noSuchMethod(
        Invocation.method(
          #estimateJoinSplitFee,
          [spendAmount],
        ),
        returnValue: _i19.Future<int>.value(0),
      ) as _i19.Future<int>);
  @override
  _i19.Future<_i10.Amount> estimateFeeFor(
    _i10.Amount? amount,
    int? feeRate,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #estimateFeeFor,
          [
            amount,
            feeRate,
          ],
        ),
        returnValue: _i19.Future<_i10.Amount>.value(_FakeAmount_7(
          this,
          Invocation.method(
            #estimateFeeFor,
            [
              amount,
              feeRate,
            ],
          ),
        )),
      ) as _i19.Future<_i10.Amount>);
  @override
  _i19.Future<_i10.Amount> estimateFeeForPublic(
    _i10.Amount? amount,
    int? feeRate,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #estimateFeeForPublic,
          [
            amount,
            feeRate,
          ],
        ),
        returnValue: _i19.Future<_i10.Amount>.value(_FakeAmount_7(
          this,
          Invocation.method(
            #estimateFeeForPublic,
            [
              amount,
              feeRate,
            ],
          ),
        )),
      ) as _i19.Future<_i10.Amount>);
  @override
  _i10.Amount roughFeeEstimate(
    int? inputCount,
    int? outputCount,
    int? feeRatePerKB,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #roughFeeEstimate,
          [
            inputCount,
            outputCount,
            feeRatePerKB,
          ],
        ),
        returnValue: _FakeAmount_7(
          this,
          Invocation.method(
            #roughFeeEstimate,
            [
              inputCount,
              outputCount,
              feeRatePerKB,
            ],
          ),
        ),
      ) as _i10.Amount);
  @override
  _i19.Future<_i10.Amount> sweepAllEstimate(int? feeRate) =>
      (super.noSuchMethod(
        Invocation.method(
          #sweepAllEstimate,
          [feeRate],
        ),
        returnValue: _i19.Future<_i10.Amount>.value(_FakeAmount_7(
          this,
          Invocation.method(
            #sweepAllEstimate,
            [feeRate],
          ),
        )),
      ) as _i19.Future<_i10.Amount>);
  @override
  _i19.Future<List<Map<String, dynamic>>> fastFetch(
          List<String>? allTxHashes) =>
      (super.noSuchMethod(
        Invocation.method(
          #fastFetch,
          [allTxHashes],
        ),
        returnValue: _i19.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i19.Future<List<Map<String, dynamic>>>);
  @override
  _i19.Future<Map<_i22.Address, _i22.Transaction>> getJMintTransactions(
    _i13.CachedElectrumX? cachedClient,
    List<String>? transactions,
    _i18.Coin? coin,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getJMintTransactions,
          [
            cachedClient,
            transactions,
            coin,
          ],
        ),
        returnValue: _i19.Future<Map<_i22.Address, _i22.Transaction>>.value(
            <_i22.Address, _i22.Transaction>{}),
      ) as _i19.Future<Map<_i22.Address, _i22.Transaction>>);
  @override
  _i19.Future<bool> generateNewAddress() => (super.noSuchMethod(
        Invocation.method(
          #generateNewAddress,
          [],
        ),
        returnValue: _i19.Future<bool>.value(false),
      ) as _i19.Future<bool>);
  @override
  _i10.Amount availablePrivateBalance() => (super.noSuchMethod(
        Invocation.method(
          #availablePrivateBalance,
          [],
        ),
        returnValue: _FakeAmount_7(
          this,
          Invocation.method(
            #availablePrivateBalance,
            [],
          ),
        ),
      ) as _i10.Amount);
  @override
  _i10.Amount availablePublicBalance() => (super.noSuchMethod(
        Invocation.method(
          #availablePublicBalance,
          [],
        ),
        returnValue: _FakeAmount_7(
          this,
          Invocation.method(
            #availablePublicBalance,
            [],
          ),
        ),
      ) as _i10.Amount);
  @override
  void initCache(
    String? walletId,
    _i18.Coin? coin,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #initCache,
          [
            walletId,
            coin,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i19.Future<void> updateCachedId(String? id) => (super.noSuchMethod(
        Invocation.method(
          #updateCachedId,
          [id],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  int getCachedChainHeight() => (super.noSuchMethod(
        Invocation.method(
          #getCachedChainHeight,
          [],
        ),
        returnValue: 0,
      ) as int);
  @override
  _i19.Future<void> updateCachedChainHeight(int? height) => (super.noSuchMethod(
        Invocation.method(
          #updateCachedChainHeight,
          [height],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  bool getCachedIsFavorite() => (super.noSuchMethod(
        Invocation.method(
          #getCachedIsFavorite,
          [],
        ),
        returnValue: false,
      ) as bool);
  @override
  _i19.Future<void> updateCachedIsFavorite(bool? isFavorite) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateCachedIsFavorite,
          [isFavorite],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  _i9.Balance getCachedBalance() => (super.noSuchMethod(
        Invocation.method(
          #getCachedBalance,
          [],
        ),
        returnValue: _FakeBalance_6(
          this,
          Invocation.method(
            #getCachedBalance,
            [],
          ),
        ),
      ) as _i9.Balance);
  @override
  _i19.Future<void> updateCachedBalance(_i9.Balance? balance) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateCachedBalance,
          [balance],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  _i9.Balance getCachedBalanceSecondary() => (super.noSuchMethod(
        Invocation.method(
          #getCachedBalanceSecondary,
          [],
        ),
        returnValue: _FakeBalance_6(
          this,
          Invocation.method(
            #getCachedBalanceSecondary,
            [],
          ),
        ),
      ) as _i9.Balance);
  @override
  _i19.Future<void> updateCachedBalanceSecondary(_i9.Balance? balance) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateCachedBalanceSecondary,
          [balance],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  List<String> getWalletTokenContractAddresses() => (super.noSuchMethod(
        Invocation.method(
          #getWalletTokenContractAddresses,
          [],
        ),
        returnValue: <String>[],
      ) as List<String>);
  @override
  _i19.Future<void> updateWalletTokenContractAddresses(
          List<String>? contractAddresses) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateWalletTokenContractAddresses,
          [contractAddresses],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  void initWalletDB({_i14.MainDB? mockableOverride}) => super.noSuchMethod(
        Invocation.method(
          #initWalletDB,
          [],
          {#mockableOverride: mockableOverride},
        ),
        returnValueForMissingStub: null,
      );
  @override
  void initFiroHive(String? walletId) => super.noSuchMethod(
        Invocation.method(
          #initFiroHive,
          [walletId],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i19.Future<void> firoUpdateJIndex(List<dynamic>? jIndex) =>
      (super.noSuchMethod(
        Invocation.method(
          #firoUpdateJIndex,
          [jIndex],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  _i19.Future<void> firoUpdateLelantusCoins(List<dynamic>? lelantusCoins) =>
      (super.noSuchMethod(
        Invocation.method(
          #firoUpdateLelantusCoins,
          [lelantusCoins],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  int firoGetMintIndex() => (super.noSuchMethod(
        Invocation.method(
          #firoGetMintIndex,
          [],
        ),
        returnValue: 0,
      ) as int);
  @override
  _i19.Future<void> firoUpdateMintIndex(int? mintIndex) => (super.noSuchMethod(
        Invocation.method(
          #firoUpdateMintIndex,
          [mintIndex],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
}

/// A class which mocks [LocaleService].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocaleService extends _i1.Mock implements _i25.LocaleService {
  MockLocaleService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get locale => (super.noSuchMethod(
        Invocation.getter(#locale),
        returnValue: '',
      ) as String);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  _i19.Future<void> loadLocale({bool? notify = true}) => (super.noSuchMethod(
        Invocation.method(
          #loadLocale,
          [],
          {#notify: notify},
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  void addListener(_i21.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i21.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [Prefs].
///
/// See the documentation for Mockito's code generation for more information.
class MockPrefs extends _i1.Mock implements _i20.Prefs {
  MockPrefs() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isInitialized => (super.noSuchMethod(
        Invocation.getter(#isInitialized),
        returnValue: false,
      ) as bool);
  @override
  int get lastUnlockedTimeout => (super.noSuchMethod(
        Invocation.getter(#lastUnlockedTimeout),
        returnValue: 0,
      ) as int);
  @override
  set lastUnlockedTimeout(int? lastUnlockedTimeout) => super.noSuchMethod(
        Invocation.setter(
          #lastUnlockedTimeout,
          lastUnlockedTimeout,
        ),
        returnValueForMissingStub: null,
      );
  @override
  int get lastUnlocked => (super.noSuchMethod(
        Invocation.getter(#lastUnlocked),
        returnValue: 0,
      ) as int);
  @override
  set lastUnlocked(int? lastUnlocked) => super.noSuchMethod(
        Invocation.setter(
          #lastUnlocked,
          lastUnlocked,
        ),
        returnValueForMissingStub: null,
      );
  @override
  int get currentNotificationId => (super.noSuchMethod(
        Invocation.getter(#currentNotificationId),
        returnValue: 0,
      ) as int);
  @override
  List<String> get walletIdsSyncOnStartup => (super.noSuchMethod(
        Invocation.getter(#walletIdsSyncOnStartup),
        returnValue: <String>[],
      ) as List<String>);
  @override
  set walletIdsSyncOnStartup(List<String>? walletIdsSyncOnStartup) =>
      super.noSuchMethod(
        Invocation.setter(
          #walletIdsSyncOnStartup,
          walletIdsSyncOnStartup,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i26.SyncingType get syncType => (super.noSuchMethod(
        Invocation.getter(#syncType),
        returnValue: _i26.SyncingType.currentWalletOnly,
      ) as _i26.SyncingType);
  @override
  set syncType(_i26.SyncingType? syncType) => super.noSuchMethod(
        Invocation.setter(
          #syncType,
          syncType,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get wifiOnly => (super.noSuchMethod(
        Invocation.getter(#wifiOnly),
        returnValue: false,
      ) as bool);
  @override
  set wifiOnly(bool? wifiOnly) => super.noSuchMethod(
        Invocation.setter(
          #wifiOnly,
          wifiOnly,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get showFavoriteWallets => (super.noSuchMethod(
        Invocation.getter(#showFavoriteWallets),
        returnValue: false,
      ) as bool);
  @override
  set showFavoriteWallets(bool? showFavoriteWallets) => super.noSuchMethod(
        Invocation.setter(
          #showFavoriteWallets,
          showFavoriteWallets,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get language => (super.noSuchMethod(
        Invocation.getter(#language),
        returnValue: '',
      ) as String);
  @override
  set language(String? newLanguage) => super.noSuchMethod(
        Invocation.setter(
          #language,
          newLanguage,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get currency => (super.noSuchMethod(
        Invocation.getter(#currency),
        returnValue: '',
      ) as String);
  @override
  set currency(String? newCurrency) => super.noSuchMethod(
        Invocation.setter(
          #currency,
          newCurrency,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get randomizePIN => (super.noSuchMethod(
        Invocation.getter(#randomizePIN),
        returnValue: false,
      ) as bool);
  @override
  set randomizePIN(bool? randomizePIN) => super.noSuchMethod(
        Invocation.setter(
          #randomizePIN,
          randomizePIN,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get useBiometrics => (super.noSuchMethod(
        Invocation.getter(#useBiometrics),
        returnValue: false,
      ) as bool);
  @override
  set useBiometrics(bool? useBiometrics) => super.noSuchMethod(
        Invocation.setter(
          #useBiometrics,
          useBiometrics,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get hasPin => (super.noSuchMethod(
        Invocation.getter(#hasPin),
        returnValue: false,
      ) as bool);
  @override
  set hasPin(bool? hasPin) => super.noSuchMethod(
        Invocation.setter(
          #hasPin,
          hasPin,
        ),
        returnValueForMissingStub: null,
      );
  @override
  int get familiarity => (super.noSuchMethod(
        Invocation.getter(#familiarity),
        returnValue: 0,
      ) as int);
  @override
  set familiarity(int? familiarity) => super.noSuchMethod(
        Invocation.setter(
          #familiarity,
          familiarity,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get showTestNetCoins => (super.noSuchMethod(
        Invocation.getter(#showTestNetCoins),
        returnValue: false,
      ) as bool);
  @override
  set showTestNetCoins(bool? showTestNetCoins) => super.noSuchMethod(
        Invocation.setter(
          #showTestNetCoins,
          showTestNetCoins,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get isAutoBackupEnabled => (super.noSuchMethod(
        Invocation.getter(#isAutoBackupEnabled),
        returnValue: false,
      ) as bool);
  @override
  set isAutoBackupEnabled(bool? isAutoBackupEnabled) => super.noSuchMethod(
        Invocation.setter(
          #isAutoBackupEnabled,
          isAutoBackupEnabled,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set autoBackupLocation(String? autoBackupLocation) => super.noSuchMethod(
        Invocation.setter(
          #autoBackupLocation,
          autoBackupLocation,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i27.BackupFrequencyType get backupFrequencyType => (super.noSuchMethod(
        Invocation.getter(#backupFrequencyType),
        returnValue: _i27.BackupFrequencyType.everyTenMinutes,
      ) as _i27.BackupFrequencyType);
  @override
  set backupFrequencyType(_i27.BackupFrequencyType? backupFrequencyType) =>
      super.noSuchMethod(
        Invocation.setter(
          #backupFrequencyType,
          backupFrequencyType,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set lastAutoBackup(DateTime? lastAutoBackup) => super.noSuchMethod(
        Invocation.setter(
          #lastAutoBackup,
          lastAutoBackup,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get hideBlockExplorerWarning => (super.noSuchMethod(
        Invocation.getter(#hideBlockExplorerWarning),
        returnValue: false,
      ) as bool);
  @override
  set hideBlockExplorerWarning(bool? hideBlockExplorerWarning) =>
      super.noSuchMethod(
        Invocation.setter(
          #hideBlockExplorerWarning,
          hideBlockExplorerWarning,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get gotoWalletOnStartup => (super.noSuchMethod(
        Invocation.getter(#gotoWalletOnStartup),
        returnValue: false,
      ) as bool);
  @override
  set gotoWalletOnStartup(bool? gotoWalletOnStartup) => super.noSuchMethod(
        Invocation.setter(
          #gotoWalletOnStartup,
          gotoWalletOnStartup,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set startupWalletId(String? startupWalletId) => super.noSuchMethod(
        Invocation.setter(
          #startupWalletId,
          startupWalletId,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get externalCalls => (super.noSuchMethod(
        Invocation.getter(#externalCalls),
        returnValue: false,
      ) as bool);
  @override
  set externalCalls(bool? externalCalls) => super.noSuchMethod(
        Invocation.setter(
          #externalCalls,
          externalCalls,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get enableCoinControl => (super.noSuchMethod(
        Invocation.getter(#enableCoinControl),
        returnValue: false,
      ) as bool);
  @override
  set enableCoinControl(bool? enableCoinControl) => super.noSuchMethod(
        Invocation.setter(
          #enableCoinControl,
          enableCoinControl,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get enableSystemBrightness => (super.noSuchMethod(
        Invocation.getter(#enableSystemBrightness),
        returnValue: false,
      ) as bool);
  @override
  set enableSystemBrightness(bool? enableSystemBrightness) =>
      super.noSuchMethod(
        Invocation.setter(
          #enableSystemBrightness,
          enableSystemBrightness,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get themeId => (super.noSuchMethod(
        Invocation.getter(#themeId),
        returnValue: '',
      ) as String);
  @override
  set themeId(String? themeId) => super.noSuchMethod(
        Invocation.setter(
          #themeId,
          themeId,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get systemBrightnessLightThemeId => (super.noSuchMethod(
        Invocation.getter(#systemBrightnessLightThemeId),
        returnValue: '',
      ) as String);
  @override
  set systemBrightnessLightThemeId(String? systemBrightnessLightThemeId) =>
      super.noSuchMethod(
        Invocation.setter(
          #systemBrightnessLightThemeId,
          systemBrightnessLightThemeId,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get systemBrightnessDarkThemeId => (super.noSuchMethod(
        Invocation.getter(#systemBrightnessDarkThemeId),
        returnValue: '',
      ) as String);
  @override
  set systemBrightnessDarkThemeId(String? systemBrightnessDarkThemeId) =>
      super.noSuchMethod(
        Invocation.setter(
          #systemBrightnessDarkThemeId,
          systemBrightnessDarkThemeId,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  _i19.Future<void> init() => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  _i19.Future<void> incrementCurrentNotificationIndex() => (super.noSuchMethod(
        Invocation.method(
          #incrementCurrentNotificationIndex,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  _i19.Future<bool> isExternalCallsSet() => (super.noSuchMethod(
        Invocation.method(
          #isExternalCallsSet,
          [],
        ),
        returnValue: _i19.Future<bool>.value(false),
      ) as _i19.Future<bool>);
  @override
  _i19.Future<void> saveUserID(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #saveUserID,
          [userId],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  _i19.Future<void> saveSignupEpoch(int? signupEpoch) => (super.noSuchMethod(
        Invocation.method(
          #saveSignupEpoch,
          [signupEpoch],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  _i28.AmountUnit amountUnit(_i18.Coin? coin) => (super.noSuchMethod(
        Invocation.method(
          #amountUnit,
          [coin],
        ),
        returnValue: _i28.AmountUnit.normal,
      ) as _i28.AmountUnit);
  @override
  void updateAmountUnit({
    required _i18.Coin? coin,
    required _i28.AmountUnit? amountUnit,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #updateAmountUnit,
          [],
          {
            #coin: coin,
            #amountUnit: amountUnit,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  int maxDecimals(_i18.Coin? coin) => (super.noSuchMethod(
        Invocation.method(
          #maxDecimals,
          [coin],
        ),
        returnValue: 0,
      ) as int);
  @override
  void updateMaxDecimals({
    required _i18.Coin? coin,
    required int? maxDecimals,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #updateMaxDecimals,
          [],
          {
            #coin: coin,
            #maxDecimals: maxDecimals,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addListener(_i21.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i21.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [PriceService].
///
/// See the documentation for Mockito's code generation for more information.
class MockPriceService extends _i1.Mock implements _i29.PriceService {
  MockPriceService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get baseTicker => (super.noSuchMethod(
        Invocation.getter(#baseTicker),
        returnValue: '',
      ) as String);
  @override
  set baseTicker(String? _baseTicker) => super.noSuchMethod(
        Invocation.setter(
          #baseTicker,
          _baseTicker,
        ),
        returnValueForMissingStub: null,
      );
  @override
  Set<String> get tokenContractAddressesToCheck => (super.noSuchMethod(
        Invocation.getter(#tokenContractAddressesToCheck),
        returnValue: <String>{},
      ) as Set<String>);
  @override
  Duration get updateInterval => (super.noSuchMethod(
        Invocation.getter(#updateInterval),
        returnValue: _FakeDuration_12(
          this,
          Invocation.getter(#updateInterval),
        ),
      ) as Duration);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  _i15.Tuple2<_i30.Decimal, double> getPrice(_i18.Coin? coin) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPrice,
          [coin],
        ),
        returnValue: _FakeTuple2_13<_i30.Decimal, double>(
          this,
          Invocation.method(
            #getPrice,
            [coin],
          ),
        ),
      ) as _i15.Tuple2<_i30.Decimal, double>);
  @override
  _i15.Tuple2<_i30.Decimal, double> getTokenPrice(String? contractAddress) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTokenPrice,
          [contractAddress],
        ),
        returnValue: _FakeTuple2_13<_i30.Decimal, double>(
          this,
          Invocation.method(
            #getTokenPrice,
            [contractAddress],
          ),
        ),
      ) as _i15.Tuple2<_i30.Decimal, double>);
  @override
  _i19.Future<void> updatePrice() => (super.noSuchMethod(
        Invocation.method(
          #updatePrice,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  void cancel() => super.noSuchMethod(
        Invocation.method(
          #cancel,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void start(bool? rightAway) => super.noSuchMethod(
        Invocation.method(
          #start,
          [rightAway],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addListener(_i21.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i21.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [NotesService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNotesService extends _i1.Mock implements _i31.NotesService {
  MockNotesService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get walletId => (super.noSuchMethod(
        Invocation.getter(#walletId),
        returnValue: '',
      ) as String);
  @override
  Map<String, String> get notesSync => (super.noSuchMethod(
        Invocation.getter(#notesSync),
        returnValue: <String, String>{},
      ) as Map<String, String>);
  @override
  _i19.Future<Map<String, String>> get notes => (super.noSuchMethod(
        Invocation.getter(#notes),
        returnValue: _i19.Future<Map<String, String>>.value(<String, String>{}),
      ) as _i19.Future<Map<String, String>>);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  _i19.Future<Map<String, String>> search(String? text) => (super.noSuchMethod(
        Invocation.method(
          #search,
          [text],
        ),
        returnValue: _i19.Future<Map<String, String>>.value(<String, String>{}),
      ) as _i19.Future<Map<String, String>>);
  @override
  _i19.Future<String> getNoteFor({required String? txid}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getNoteFor,
          [],
          {#txid: txid},
        ),
        returnValue: _i19.Future<String>.value(''),
      ) as _i19.Future<String>);
  @override
  _i19.Future<void> editOrAddNote({
    required String? txid,
    required String? note,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #editOrAddNote,
          [],
          {
            #txid: txid,
            #note: note,
          },
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  _i19.Future<void> deleteNote({required String? txid}) => (super.noSuchMethod(
        Invocation.method(
          #deleteNote,
          [],
          {#txid: txid},
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  void addListener(_i21.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i21.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [ThemeService].
///
/// See the documentation for Mockito's code generation for more information.
class MockThemeService extends _i1.Mock implements _i32.ThemeService {
  MockThemeService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i14.MainDB get db => (super.noSuchMethod(
        Invocation.getter(#db),
        returnValue: _FakeMainDB_11(
          this,
          Invocation.getter(#db),
        ),
      ) as _i14.MainDB);
  @override
  List<_i33.StackTheme> get installedThemes => (super.noSuchMethod(
        Invocation.getter(#installedThemes),
        returnValue: <_i33.StackTheme>[],
      ) as List<_i33.StackTheme>);
  @override
  void init(_i14.MainDB? db) => super.noSuchMethod(
        Invocation.method(
          #init,
          [db],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i19.Future<void> install({required _i34.Uint8List? themeArchiveData}) =>
      (super.noSuchMethod(
        Invocation.method(
          #install,
          [],
          {#themeArchiveData: themeArchiveData},
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  _i19.Future<void> remove({required String? themeId}) => (super.noSuchMethod(
        Invocation.method(
          #remove,
          [],
          {#themeId: themeId},
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  _i19.Future<void> checkDefaultThemesOnStartup() => (super.noSuchMethod(
        Invocation.method(
          #checkDefaultThemesOnStartup,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  _i19.Future<bool> verifyInstalled({required String? themeId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyInstalled,
          [],
          {#themeId: themeId},
        ),
        returnValue: _i19.Future<bool>.value(false),
      ) as _i19.Future<bool>);
  @override
  _i19.Future<List<_i32.StackThemeMetaData>> fetchThemes() =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchThemes,
          [],
        ),
        returnValue: _i19.Future<List<_i32.StackThemeMetaData>>.value(
            <_i32.StackThemeMetaData>[]),
      ) as _i19.Future<List<_i32.StackThemeMetaData>>);
  @override
  _i19.Future<_i34.Uint8List> fetchTheme(
          {required _i32.StackThemeMetaData? themeMetaData}) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchTheme,
          [],
          {#themeMetaData: themeMetaData},
        ),
        returnValue: _i19.Future<_i34.Uint8List>.value(_i34.Uint8List(0)),
      ) as _i19.Future<_i34.Uint8List>);
  @override
  _i33.StackTheme? getTheme({required String? themeId}) =>
      (super.noSuchMethod(Invocation.method(
        #getTheme,
        [],
        {#themeId: themeId},
      )) as _i33.StackTheme?);
}

/// A class which mocks [MainDB].
///
/// See the documentation for Mockito's code generation for more information.
class MockMainDB extends _i1.Mock implements _i14.MainDB {
  MockMainDB() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i16.Isar get isar => (super.noSuchMethod(
        Invocation.getter(#isar),
        returnValue: _FakeIsar_14(
          this,
          Invocation.getter(#isar),
        ),
      ) as _i16.Isar);
  @override
  _i19.Future<bool> initMainDB({_i16.Isar? mock}) => (super.noSuchMethod(
        Invocation.method(
          #initMainDB,
          [],
          {#mock: mock},
        ),
        returnValue: _i19.Future<bool>.value(false),
      ) as _i19.Future<bool>);
  @override
  List<_i35.ContactEntry> getContactEntries() => (super.noSuchMethod(
        Invocation.method(
          #getContactEntries,
          [],
        ),
        returnValue: <_i35.ContactEntry>[],
      ) as List<_i35.ContactEntry>);
  @override
  _i19.Future<bool> deleteContactEntry({required String? id}) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteContactEntry,
          [],
          {#id: id},
        ),
        returnValue: _i19.Future<bool>.value(false),
      ) as _i19.Future<bool>);
  @override
  _i19.Future<bool> isContactEntryExists({required String? id}) =>
      (super.noSuchMethod(
        Invocation.method(
          #isContactEntryExists,
          [],
          {#id: id},
        ),
        returnValue: _i19.Future<bool>.value(false),
      ) as _i19.Future<bool>);
  @override
  _i35.ContactEntry? getContactEntry({required String? id}) =>
      (super.noSuchMethod(Invocation.method(
        #getContactEntry,
        [],
        {#id: id},
      )) as _i35.ContactEntry?);
  @override
  _i19.Future<bool> putContactEntry(
          {required _i35.ContactEntry? contactEntry}) =>
      (super.noSuchMethod(
        Invocation.method(
          #putContactEntry,
          [],
          {#contactEntry: contactEntry},
        ),
        returnValue: _i19.Future<bool>.value(false),
      ) as _i19.Future<bool>);
  @override
  _i36.TransactionBlockExplorer? getTransactionBlockExplorer(
          {required _i18.Coin? coin}) =>
      (super.noSuchMethod(Invocation.method(
        #getTransactionBlockExplorer,
        [],
        {#coin: coin},
      )) as _i36.TransactionBlockExplorer?);
  @override
  _i19.Future<int> putTransactionBlockExplorer(
          _i36.TransactionBlockExplorer? explorer) =>
      (super.noSuchMethod(
        Invocation.method(
          #putTransactionBlockExplorer,
          [explorer],
        ),
        returnValue: _i19.Future<int>.value(0),
      ) as _i19.Future<int>);
  @override
  _i16.QueryBuilder<_i22.Address, _i22.Address, _i16.QAfterWhereClause>
      getAddresses(String? walletId) => (super.noSuchMethod(
            Invocation.method(
              #getAddresses,
              [walletId],
            ),
            returnValue: _FakeQueryBuilder_15<_i22.Address, _i22.Address,
                _i16.QAfterWhereClause>(
              this,
              Invocation.method(
                #getAddresses,
                [walletId],
              ),
            ),
          ) as _i16.QueryBuilder<_i22.Address, _i22.Address,
              _i16.QAfterWhereClause>);
  @override
  _i19.Future<int> putAddress(_i22.Address? address) => (super.noSuchMethod(
        Invocation.method(
          #putAddress,
          [address],
        ),
        returnValue: _i19.Future<int>.value(0),
      ) as _i19.Future<int>);
  @override
  _i19.Future<List<int>> putAddresses(List<_i22.Address>? addresses) =>
      (super.noSuchMethod(
        Invocation.method(
          #putAddresses,
          [addresses],
        ),
        returnValue: _i19.Future<List<int>>.value(<int>[]),
      ) as _i19.Future<List<int>>);
  @override
  _i19.Future<List<int>> updateOrPutAddresses(List<_i22.Address>? addresses) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateOrPutAddresses,
          [addresses],
        ),
        returnValue: _i19.Future<List<int>>.value(<int>[]),
      ) as _i19.Future<List<int>>);
  @override
  _i19.Future<_i22.Address?> getAddress(
    String? walletId,
    String? address,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAddress,
          [
            walletId,
            address,
          ],
        ),
        returnValue: _i19.Future<_i22.Address?>.value(),
      ) as _i19.Future<_i22.Address?>);
  @override
  _i19.Future<int> updateAddress(
    _i22.Address? oldAddress,
    _i22.Address? newAddress,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateAddress,
          [
            oldAddress,
            newAddress,
          ],
        ),
        returnValue: _i19.Future<int>.value(0),
      ) as _i19.Future<int>);
  @override
  _i16.QueryBuilder<_i22.Transaction, _i22.Transaction, _i16.QAfterWhereClause>
      getTransactions(String? walletId) => (super.noSuchMethod(
            Invocation.method(
              #getTransactions,
              [walletId],
            ),
            returnValue: _FakeQueryBuilder_15<_i22.Transaction,
                _i22.Transaction, _i16.QAfterWhereClause>(
              this,
              Invocation.method(
                #getTransactions,
                [walletId],
              ),
            ),
          ) as _i16.QueryBuilder<_i22.Transaction, _i22.Transaction,
              _i16.QAfterWhereClause>);
  @override
  _i19.Future<int> putTransaction(_i22.Transaction? transaction) =>
      (super.noSuchMethod(
        Invocation.method(
          #putTransaction,
          [transaction],
        ),
        returnValue: _i19.Future<int>.value(0),
      ) as _i19.Future<int>);
  @override
  _i19.Future<List<int>> putTransactions(
          List<_i22.Transaction>? transactions) =>
      (super.noSuchMethod(
        Invocation.method(
          #putTransactions,
          [transactions],
        ),
        returnValue: _i19.Future<List<int>>.value(<int>[]),
      ) as _i19.Future<List<int>>);
  @override
  _i19.Future<_i22.Transaction?> getTransaction(
    String? walletId,
    String? txid,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTransaction,
          [
            walletId,
            txid,
          ],
        ),
        returnValue: _i19.Future<_i22.Transaction?>.value(),
      ) as _i19.Future<_i22.Transaction?>);
  @override
  _i19.Stream<_i22.Transaction?> watchTransaction({
    required int? id,
    bool? fireImmediately = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #watchTransaction,
          [],
          {
            #id: id,
            #fireImmediately: fireImmediately,
          },
        ),
        returnValue: _i19.Stream<_i22.Transaction?>.empty(),
      ) as _i19.Stream<_i22.Transaction?>);
  @override
  _i16.QueryBuilder<_i22.UTXO, _i22.UTXO, _i16.QAfterWhereClause> getUTXOs(
          String? walletId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUTXOs,
          [walletId],
        ),
        returnValue:
            _FakeQueryBuilder_15<_i22.UTXO, _i22.UTXO, _i16.QAfterWhereClause>(
          this,
          Invocation.method(
            #getUTXOs,
            [walletId],
          ),
        ),
      ) as _i16.QueryBuilder<_i22.UTXO, _i22.UTXO, _i16.QAfterWhereClause>);
  @override
  _i19.Future<void> putUTXO(_i22.UTXO? utxo) => (super.noSuchMethod(
        Invocation.method(
          #putUTXO,
          [utxo],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  _i19.Future<void> putUTXOs(List<_i22.UTXO>? utxos) => (super.noSuchMethod(
        Invocation.method(
          #putUTXOs,
          [utxos],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  _i19.Future<void> updateUTXOs(
    String? walletId,
    List<_i22.UTXO>? utxos,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUTXOs,
          [
            walletId,
            utxos,
          ],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  _i19.Stream<_i22.UTXO?> watchUTXO({
    required int? id,
    bool? fireImmediately = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #watchUTXO,
          [],
          {
            #id: id,
            #fireImmediately: fireImmediately,
          },
        ),
        returnValue: _i19.Stream<_i22.UTXO?>.empty(),
      ) as _i19.Stream<_i22.UTXO?>);
  @override
  _i16.QueryBuilder<_i22.TransactionNote, _i22.TransactionNote,
      _i16.QAfterWhereClause> getTransactionNotes(
          String? walletId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTransactionNotes,
          [walletId],
        ),
        returnValue: _FakeQueryBuilder_15<_i22.TransactionNote,
            _i22.TransactionNote, _i16.QAfterWhereClause>(
          this,
          Invocation.method(
            #getTransactionNotes,
            [walletId],
          ),
        ),
      ) as _i16.QueryBuilder<_i22.TransactionNote, _i22.TransactionNote,
          _i16.QAfterWhereClause>);
  @override
  _i19.Future<void> putTransactionNote(_i22.TransactionNote? transactionNote) =>
      (super.noSuchMethod(
        Invocation.method(
          #putTransactionNote,
          [transactionNote],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  _i19.Future<void> putTransactionNotes(
          List<_i22.TransactionNote>? transactionNotes) =>
      (super.noSuchMethod(
        Invocation.method(
          #putTransactionNotes,
          [transactionNotes],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  _i19.Future<_i22.TransactionNote?> getTransactionNote(
    String? walletId,
    String? txid,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTransactionNote,
          [
            walletId,
            txid,
          ],
        ),
        returnValue: _i19.Future<_i22.TransactionNote?>.value(),
      ) as _i19.Future<_i22.TransactionNote?>);
  @override
  _i19.Stream<_i22.TransactionNote?> watchTransactionNote({
    required int? id,
    bool? fireImmediately = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #watchTransactionNote,
          [],
          {
            #id: id,
            #fireImmediately: fireImmediately,
          },
        ),
        returnValue: _i19.Stream<_i22.TransactionNote?>.empty(),
      ) as _i19.Stream<_i22.TransactionNote?>);
  @override
  _i16.QueryBuilder<_i22.AddressLabel, _i22.AddressLabel,
      _i16.QAfterWhereClause> getAddressLabels(
          String? walletId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAddressLabels,
          [walletId],
        ),
        returnValue: _FakeQueryBuilder_15<_i22.AddressLabel, _i22.AddressLabel,
            _i16.QAfterWhereClause>(
          this,
          Invocation.method(
            #getAddressLabels,
            [walletId],
          ),
        ),
      ) as _i16.QueryBuilder<_i22.AddressLabel, _i22.AddressLabel,
          _i16.QAfterWhereClause>);
  @override
  _i19.Future<int> putAddressLabel(_i22.AddressLabel? addressLabel) =>
      (super.noSuchMethod(
        Invocation.method(
          #putAddressLabel,
          [addressLabel],
        ),
        returnValue: _i19.Future<int>.value(0),
      ) as _i19.Future<int>);
  @override
  int putAddressLabelSync(_i22.AddressLabel? addressLabel) =>
      (super.noSuchMethod(
        Invocation.method(
          #putAddressLabelSync,
          [addressLabel],
        ),
        returnValue: 0,
      ) as int);
  @override
  _i19.Future<void> putAddressLabels(List<_i22.AddressLabel>? addressLabels) =>
      (super.noSuchMethod(
        Invocation.method(
          #putAddressLabels,
          [addressLabels],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  _i19.Future<_i22.AddressLabel?> getAddressLabel(
    String? walletId,
    String? addressString,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAddressLabel,
          [
            walletId,
            addressString,
          ],
        ),
        returnValue: _i19.Future<_i22.AddressLabel?>.value(),
      ) as _i19.Future<_i22.AddressLabel?>);
  @override
  _i22.AddressLabel? getAddressLabelSync(
    String? walletId,
    String? addressString,
  ) =>
      (super.noSuchMethod(Invocation.method(
        #getAddressLabelSync,
        [
          walletId,
          addressString,
        ],
      )) as _i22.AddressLabel?);
  @override
  _i19.Stream<_i22.AddressLabel?> watchAddressLabel({
    required int? id,
    bool? fireImmediately = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #watchAddressLabel,
          [],
          {
            #id: id,
            #fireImmediately: fireImmediately,
          },
        ),
        returnValue: _i19.Stream<_i22.AddressLabel?>.empty(),
      ) as _i19.Stream<_i22.AddressLabel?>);
  @override
  _i19.Future<int> updateAddressLabel(_i22.AddressLabel? addressLabel) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateAddressLabel,
          [addressLabel],
        ),
        returnValue: _i19.Future<int>.value(0),
      ) as _i19.Future<int>);
  @override
  _i19.Future<void> deleteWalletBlockchainData(String? walletId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteWalletBlockchainData,
          [walletId],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  _i19.Future<void> deleteAddressLabels(String? walletId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteAddressLabels,
          [walletId],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  _i19.Future<void> deleteTransactionNotes(String? walletId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteTransactionNotes,
          [walletId],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  _i19.Future<void> addNewTransactionData(
    List<_i15.Tuple2<_i22.Transaction, _i22.Address?>>? transactionsData,
    String? walletId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addNewTransactionData,
          [
            transactionsData,
            walletId,
          ],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  _i16.QueryBuilder<_i22.EthContract, _i22.EthContract, _i16.QWhere>
      getEthContracts() => (super.noSuchMethod(
            Invocation.method(
              #getEthContracts,
              [],
            ),
            returnValue: _FakeQueryBuilder_15<_i22.EthContract,
                _i22.EthContract, _i16.QWhere>(
              this,
              Invocation.method(
                #getEthContracts,
                [],
              ),
            ),
          ) as _i16
              .QueryBuilder<_i22.EthContract, _i22.EthContract, _i16.QWhere>);
  @override
  _i19.Future<_i22.EthContract?> getEthContract(String? contractAddress) =>
      (super.noSuchMethod(
        Invocation.method(
          #getEthContract,
          [contractAddress],
        ),
        returnValue: _i19.Future<_i22.EthContract?>.value(),
      ) as _i19.Future<_i22.EthContract?>);
  @override
  _i22.EthContract? getEthContractSync(String? contractAddress) =>
      (super.noSuchMethod(Invocation.method(
        #getEthContractSync,
        [contractAddress],
      )) as _i22.EthContract?);
  @override
  _i19.Future<int> putEthContract(_i22.EthContract? contract) =>
      (super.noSuchMethod(
        Invocation.method(
          #putEthContract,
          [contract],
        ),
        returnValue: _i19.Future<int>.value(0),
      ) as _i19.Future<int>);
  @override
  _i19.Future<void> putEthContracts(List<_i22.EthContract>? contracts) =>
      (super.noSuchMethod(
        Invocation.method(
          #putEthContracts,
          [contracts],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
}
