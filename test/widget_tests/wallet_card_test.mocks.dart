// Mocks generated by Mockito 5.4.1 from annotations
// in stackwallet/test/widget_tests/wallet_card_test.dart.
// Do not manually edit this file.

// @dart=2.19

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i21;
import 'dart:typed_data' as _i28;
import 'dart:ui' as _i23;

import 'package:bip32/bip32.dart' as _i16;
import 'package:bip47/bip47.dart' as _i18;
import 'package:bitcoindart/bitcoindart.dart' as _i13;
import 'package:flutter/foundation.dart' as _i4;
import 'package:flutter_riverpod/flutter_riverpod.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:stackwallet/db/isar/main_db.dart' as _i12;
import 'package:stackwallet/electrumx_rpc/cached_electrumx.dart' as _i10;
import 'package:stackwallet/electrumx_rpc/electrumx.dart' as _i9;
import 'package:stackwallet/models/balance.dart' as _i11;
import 'package:stackwallet/models/isar/models/isar_models.dart' as _i17;
import 'package:stackwallet/models/isar/stack_theme.dart' as _i31;
import 'package:stackwallet/models/paymint/fee_object_model.dart' as _i8;
import 'package:stackwallet/models/signing_data.dart' as _i26;
import 'package:stackwallet/services/coins/bitcoin/bitcoin_wallet.dart' as _i24;
import 'package:stackwallet/services/coins/manager.dart' as _i6;
import 'package:stackwallet/services/locale_service.dart' as _i29;
import 'package:stackwallet/services/node_service.dart' as _i3;
import 'package:stackwallet/services/transaction_notification_tracker.dart'
    as _i7;
import 'package:stackwallet/services/wallets.dart' as _i19;
import 'package:stackwallet/services/wallets_service.dart' as _i2;
import 'package:stackwallet/themes/theme_service.dart' as _i30;
import 'package:stackwallet/utilities/amount/amount.dart' as _i14;
import 'package:stackwallet/utilities/enums/coin_enum.dart' as _i20;
import 'package:stackwallet/utilities/enums/derive_path_type_enum.dart' as _i25;
import 'package:stackwallet/utilities/flutter_secure_storage_interface.dart'
    as _i27;
import 'package:stackwallet/utilities/prefs.dart' as _i22;
import 'package:tuple/tuple.dart' as _i15;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeWalletsService_0 extends _i1.SmartFake
    implements _i2.WalletsService {
  _FakeWalletsService_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNodeService_1 extends _i1.SmartFake implements _i3.NodeService {
  _FakeNodeService_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeChangeNotifierProvider_2<Notifier extends _i4.ChangeNotifier?>
    extends _i1.SmartFake implements _i5.ChangeNotifierProvider<Notifier> {
  _FakeChangeNotifierProvider_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeManager_3 extends _i1.SmartFake implements _i6.Manager {
  _FakeManager_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTransactionNotificationTracker_4 extends _i1.SmartFake
    implements _i7.TransactionNotificationTracker {
  _FakeTransactionNotificationTracker_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFeeObject_5 extends _i1.SmartFake implements _i8.FeeObject {
  _FakeFeeObject_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeElectrumX_6 extends _i1.SmartFake implements _i9.ElectrumX {
  _FakeElectrumX_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCachedElectrumX_7 extends _i1.SmartFake
    implements _i10.CachedElectrumX {
  _FakeCachedElectrumX_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBalance_8 extends _i1.SmartFake implements _i11.Balance {
  _FakeBalance_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMainDB_9 extends _i1.SmartFake implements _i12.MainDB {
  _FakeMainDB_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNetworkType_10 extends _i1.SmartFake implements _i13.NetworkType {
  _FakeNetworkType_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeElectrumXNode_11 extends _i1.SmartFake implements _i9.ElectrumXNode {
  _FakeElectrumXNode_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAmount_12 extends _i1.SmartFake implements _i14.Amount {
  _FakeAmount_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTuple2_13<T1, T2> extends _i1.SmartFake
    implements _i15.Tuple2<T1, T2> {
  _FakeTuple2_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBIP32_14 extends _i1.SmartFake implements _i16.BIP32 {
  _FakeBIP32_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAddress_15 extends _i1.SmartFake implements _i17.Address {
  _FakeAddress_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePaymentCode_16 extends _i1.SmartFake implements _i18.PaymentCode {
  _FakePaymentCode_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [Wallets].
///
/// See the documentation for Mockito's code generation for more information.
class MockWallets extends _i1.Mock implements _i19.Wallets {
  MockWallets() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.WalletsService get walletsService => (super.noSuchMethod(
        Invocation.getter(#walletsService),
        returnValue: _FakeWalletsService_0(
          this,
          Invocation.getter(#walletsService),
        ),
      ) as _i2.WalletsService);
  @override
  set walletsService(_i2.WalletsService? _walletsService) => super.noSuchMethod(
        Invocation.setter(
          #walletsService,
          _walletsService,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.NodeService get nodeService => (super.noSuchMethod(
        Invocation.getter(#nodeService),
        returnValue: _FakeNodeService_1(
          this,
          Invocation.getter(#nodeService),
        ),
      ) as _i3.NodeService);
  @override
  set nodeService(_i3.NodeService? _nodeService) => super.noSuchMethod(
        Invocation.setter(
          #nodeService,
          _nodeService,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get hasWallets => (super.noSuchMethod(
        Invocation.getter(#hasWallets),
        returnValue: false,
      ) as bool);
  @override
  List<_i5.ChangeNotifierProvider<_i6.Manager>> get managerProviders =>
      (super.noSuchMethod(
        Invocation.getter(#managerProviders),
        returnValue: <_i5.ChangeNotifierProvider<_i6.Manager>>[],
      ) as List<_i5.ChangeNotifierProvider<_i6.Manager>>);
  @override
  List<_i6.Manager> get managers => (super.noSuchMethod(
        Invocation.getter(#managers),
        returnValue: <_i6.Manager>[],
      ) as List<_i6.Manager>);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<String> getWalletIdsFor({required _i20.Coin? coin}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWalletIdsFor,
          [],
          {#coin: coin},
        ),
        returnValue: <String>[],
      ) as List<String>);
  @override
  List<_i15.Tuple2<_i20.Coin, List<_i5.ChangeNotifierProvider<_i6.Manager>>>>
      getManagerProvidersByCoin() => (super.noSuchMethod(
            Invocation.method(
              #getManagerProvidersByCoin,
              [],
            ),
            returnValue: <_i15.Tuple2<_i20.Coin,
                List<_i5.ChangeNotifierProvider<_i6.Manager>>>>[],
          ) as List<
              _i15.Tuple2<_i20.Coin,
                  List<_i5.ChangeNotifierProvider<_i6.Manager>>>>);
  @override
  List<_i5.ChangeNotifierProvider<_i6.Manager>> getManagerProvidersForCoin(
          _i20.Coin? coin) =>
      (super.noSuchMethod(
        Invocation.method(
          #getManagerProvidersForCoin,
          [coin],
        ),
        returnValue: <_i5.ChangeNotifierProvider<_i6.Manager>>[],
      ) as List<_i5.ChangeNotifierProvider<_i6.Manager>>);
  @override
  _i5.ChangeNotifierProvider<_i6.Manager> getManagerProvider(
          String? walletId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getManagerProvider,
          [walletId],
        ),
        returnValue: _FakeChangeNotifierProvider_2<_i6.Manager>(
          this,
          Invocation.method(
            #getManagerProvider,
            [walletId],
          ),
        ),
      ) as _i5.ChangeNotifierProvider<_i6.Manager>);
  @override
  _i6.Manager getManager(String? walletId) => (super.noSuchMethod(
        Invocation.method(
          #getManager,
          [walletId],
        ),
        returnValue: _FakeManager_3(
          this,
          Invocation.method(
            #getManager,
            [walletId],
          ),
        ),
      ) as _i6.Manager);
  @override
  void addWallet({
    required String? walletId,
    required _i6.Manager? manager,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #addWallet,
          [],
          {
            #walletId: walletId,
            #manager: manager,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeWallet({required String? walletId}) => super.noSuchMethod(
        Invocation.method(
          #removeWallet,
          [],
          {#walletId: walletId},
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i21.Future<void> load(_i22.Prefs? prefs) => (super.noSuchMethod(
        Invocation.method(
          #load,
          [prefs],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  _i21.Future<void> loadAfterStackRestore(
    _i22.Prefs? prefs,
    List<_i6.Manager>? managers,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #loadAfterStackRestore,
          [
            prefs,
            managers,
          ],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  void addListener(_i23.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i23.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [BitcoinWallet].
///
/// See the documentation for Mockito's code generation for more information.
class MockBitcoinWallet extends _i1.Mock implements _i24.BitcoinWallet {
  MockBitcoinWallet() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set timer(_i21.Timer? _timer) => super.noSuchMethod(
        Invocation.setter(
          #timer,
          _timer,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i7.TransactionNotificationTracker get txTracker => (super.noSuchMethod(
        Invocation.getter(#txTracker),
        returnValue: _FakeTransactionNotificationTracker_4(
          this,
          Invocation.getter(#txTracker),
        ),
      ) as _i7.TransactionNotificationTracker);
  @override
  set txTracker(_i7.TransactionNotificationTracker? _txTracker) =>
      super.noSuchMethod(
        Invocation.setter(
          #txTracker,
          _txTracker,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get longMutex => (super.noSuchMethod(
        Invocation.getter(#longMutex),
        returnValue: false,
      ) as bool);
  @override
  set longMutex(bool? _longMutex) => super.noSuchMethod(
        Invocation.setter(
          #longMutex,
          _longMutex,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get refreshMutex => (super.noSuchMethod(
        Invocation.getter(#refreshMutex),
        returnValue: false,
      ) as bool);
  @override
  set refreshMutex(bool? _refreshMutex) => super.noSuchMethod(
        Invocation.setter(
          #refreshMutex,
          _refreshMutex,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get isActive => (super.noSuchMethod(
        Invocation.getter(#isActive),
        returnValue: false,
      ) as bool);
  @override
  set isActive(bool? _isActive) => super.noSuchMethod(
        Invocation.setter(
          #isActive,
          _isActive,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set isFavorite(bool? markFavorite) => super.noSuchMethod(
        Invocation.setter(
          #isFavorite,
          markFavorite,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get isFavorite => (super.noSuchMethod(
        Invocation.getter(#isFavorite),
        returnValue: false,
      ) as bool);
  @override
  _i20.Coin get coin => (super.noSuchMethod(
        Invocation.getter(#coin),
        returnValue: _i20.Coin.bitcoin,
      ) as _i20.Coin);
  @override
  _i21.Future<List<_i17.UTXO>> get utxos => (super.noSuchMethod(
        Invocation.getter(#utxos),
        returnValue: _i21.Future<List<_i17.UTXO>>.value(<_i17.UTXO>[]),
      ) as _i21.Future<List<_i17.UTXO>>);
  @override
  _i21.Future<List<_i17.Transaction>> get transactions => (super.noSuchMethod(
        Invocation.getter(#transactions),
        returnValue:
            _i21.Future<List<_i17.Transaction>>.value(<_i17.Transaction>[]),
      ) as _i21.Future<List<_i17.Transaction>>);
  @override
  _i21.Future<String> get currentReceivingAddress => (super.noSuchMethod(
        Invocation.getter(#currentReceivingAddress),
        returnValue: _i21.Future<String>.value(''),
      ) as _i21.Future<String>);
  @override
  _i21.Future<String> get currentChangeAddress => (super.noSuchMethod(
        Invocation.getter(#currentChangeAddress),
        returnValue: _i21.Future<String>.value(''),
      ) as _i21.Future<String>);
  @override
  _i21.Future<String> get currentChangeAddressP2PKH => (super.noSuchMethod(
        Invocation.getter(#currentChangeAddressP2PKH),
        returnValue: _i21.Future<String>.value(''),
      ) as _i21.Future<String>);
  @override
  bool get hasCalledExit => (super.noSuchMethod(
        Invocation.getter(#hasCalledExit),
        returnValue: false,
      ) as bool);
  @override
  _i21.Future<_i8.FeeObject> get fees => (super.noSuchMethod(
        Invocation.getter(#fees),
        returnValue: _i21.Future<_i8.FeeObject>.value(_FakeFeeObject_5(
          this,
          Invocation.getter(#fees),
        )),
      ) as _i21.Future<_i8.FeeObject>);
  @override
  _i21.Future<int> get maxFee => (super.noSuchMethod(
        Invocation.getter(#maxFee),
        returnValue: _i21.Future<int>.value(0),
      ) as _i21.Future<int>);
  @override
  _i21.Future<List<String>> get mnemonic => (super.noSuchMethod(
        Invocation.getter(#mnemonic),
        returnValue: _i21.Future<List<String>>.value(<String>[]),
      ) as _i21.Future<List<String>>);
  @override
  _i21.Future<String?> get mnemonicString => (super.noSuchMethod(
        Invocation.getter(#mnemonicString),
        returnValue: _i21.Future<String?>.value(),
      ) as _i21.Future<String?>);
  @override
  _i21.Future<String?> get mnemonicPassphrase => (super.noSuchMethod(
        Invocation.getter(#mnemonicPassphrase),
        returnValue: _i21.Future<String?>.value(),
      ) as _i21.Future<String?>);
  @override
  _i21.Future<int> get chainHeight => (super.noSuchMethod(
        Invocation.getter(#chainHeight),
        returnValue: _i21.Future<int>.value(0),
      ) as _i21.Future<int>);
  @override
  int get storedChainHeight => (super.noSuchMethod(
        Invocation.getter(#storedChainHeight),
        returnValue: 0,
      ) as int);
  @override
  bool get shouldAutoSync => (super.noSuchMethod(
        Invocation.getter(#shouldAutoSync),
        returnValue: false,
      ) as bool);
  @override
  set shouldAutoSync(bool? shouldAutoSync) => super.noSuchMethod(
        Invocation.setter(
          #shouldAutoSync,
          shouldAutoSync,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get isRefreshing => (super.noSuchMethod(
        Invocation.getter(#isRefreshing),
        returnValue: false,
      ) as bool);
  @override
  bool get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: false,
      ) as bool);
  @override
  String get walletId => (super.noSuchMethod(
        Invocation.getter(#walletId),
        returnValue: '',
      ) as String);
  @override
  String get walletName => (super.noSuchMethod(
        Invocation.getter(#walletName),
        returnValue: '',
      ) as String);
  @override
  set walletName(String? newName) => super.noSuchMethod(
        Invocation.setter(
          #walletName,
          newName,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i9.ElectrumX get electrumXClient => (super.noSuchMethod(
        Invocation.getter(#electrumXClient),
        returnValue: _FakeElectrumX_6(
          this,
          Invocation.getter(#electrumXClient),
        ),
      ) as _i9.ElectrumX);
  @override
  _i10.CachedElectrumX get cachedElectrumXClient => (super.noSuchMethod(
        Invocation.getter(#cachedElectrumXClient),
        returnValue: _FakeCachedElectrumX_7(
          this,
          Invocation.getter(#cachedElectrumXClient),
        ),
      ) as _i10.CachedElectrumX);
  @override
  _i11.Balance get balance => (super.noSuchMethod(
        Invocation.getter(#balance),
        returnValue: _FakeBalance_8(
          this,
          Invocation.getter(#balance),
        ),
      ) as _i11.Balance);
  @override
  _i21.Future<String> get xpub => (super.noSuchMethod(
        Invocation.getter(#xpub),
        returnValue: _i21.Future<String>.value(''),
      ) as _i21.Future<String>);
  @override
  set onIsActiveWalletChanged(void Function(bool)? _onIsActiveWalletChanged) =>
      super.noSuchMethod(
        Invocation.setter(
          #onIsActiveWalletChanged,
          _onIsActiveWalletChanged,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i12.MainDB get db => (super.noSuchMethod(
        Invocation.getter(#db),
        returnValue: _FakeMainDB_9(
          this,
          Invocation.getter(#db),
        ),
      ) as _i12.MainDB);
  @override
  _i13.NetworkType get networkType => (super.noSuchMethod(
        Invocation.getter(#networkType),
        returnValue: _FakeNetworkType_10(
          this,
          Invocation.getter(#networkType),
        ),
      ) as _i13.NetworkType);
  @override
  _i21.Future<void> exit() => (super.noSuchMethod(
        Invocation.method(
          #exit,
          [],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  _i25.DerivePathType addressType({required String? address}) =>
      (super.noSuchMethod(
        Invocation.method(
          #addressType,
          [],
          {#address: address},
        ),
        returnValue: _i25.DerivePathType.bip44,
      ) as _i25.DerivePathType);
  @override
  _i21.Future<void> recoverFromMnemonic({
    required String? mnemonic,
    String? mnemonicPassphrase,
    required int? maxUnusedAddressGap,
    required int? maxNumberOfIndexesToCheck,
    required int? height,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #recoverFromMnemonic,
          [],
          {
            #mnemonic: mnemonic,
            #mnemonicPassphrase: mnemonicPassphrase,
            #maxUnusedAddressGap: maxUnusedAddressGap,
            #maxNumberOfIndexesToCheck: maxNumberOfIndexesToCheck,
            #height: height,
          },
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  _i21.Future<void> getTransactionCacheEarly(List<String>? allAddresses) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTransactionCacheEarly,
          [allAddresses],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  _i21.Future<bool> refreshIfThereIsNewData() => (super.noSuchMethod(
        Invocation.method(
          #refreshIfThereIsNewData,
          [],
        ),
        returnValue: _i21.Future<bool>.value(false),
      ) as _i21.Future<bool>);
  @override
  _i21.Future<void> getAllTxsToWatch() => (super.noSuchMethod(
        Invocation.method(
          #getAllTxsToWatch,
          [],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  _i21.Future<void> refresh() => (super.noSuchMethod(
        Invocation.method(
          #refresh,
          [],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  _i21.Future<Map<String, dynamic>> prepareSend({
    required String? address,
    required _i14.Amount? amount,
    Map<String, dynamic>? args,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #prepareSend,
          [],
          {
            #address: address,
            #amount: amount,
            #args: args,
          },
        ),
        returnValue:
            _i21.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i21.Future<Map<String, dynamic>>);
  @override
  _i21.Future<String> confirmSend({required Map<String, dynamic>? txData}) =>
      (super.noSuchMethod(
        Invocation.method(
          #confirmSend,
          [],
          {#txData: txData},
        ),
        returnValue: _i21.Future<String>.value(''),
      ) as _i21.Future<String>);
  @override
  _i21.Future<bool> testNetworkConnection() => (super.noSuchMethod(
        Invocation.method(
          #testNetworkConnection,
          [],
        ),
        returnValue: _i21.Future<bool>.value(false),
      ) as _i21.Future<bool>);
  @override
  void startNetworkAlivePinging() => super.noSuchMethod(
        Invocation.method(
          #startNetworkAlivePinging,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void stopNetworkAlivePinging() => super.noSuchMethod(
        Invocation.method(
          #stopNetworkAlivePinging,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i21.Future<void> initializeNew() => (super.noSuchMethod(
        Invocation.method(
          #initializeNew,
          [],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  _i21.Future<void> initializeExisting() => (super.noSuchMethod(
        Invocation.method(
          #initializeExisting,
          [],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  _i21.Future<void> updateSentCachedTxData(Map<String, dynamic>? txData) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateSentCachedTxData,
          [txData],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  bool validateAddress(String? address) => (super.noSuchMethod(
        Invocation.method(
          #validateAddress,
          [address],
        ),
        returnValue: false,
      ) as bool);
  @override
  _i21.Future<void> updateNode(bool? shouldRefresh) => (super.noSuchMethod(
        Invocation.method(
          #updateNode,
          [shouldRefresh],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  _i21.Future<_i9.ElectrumXNode> getCurrentNode() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentNode,
          [],
        ),
        returnValue: _i21.Future<_i9.ElectrumXNode>.value(_FakeElectrumXNode_11(
          this,
          Invocation.method(
            #getCurrentNode,
            [],
          ),
        )),
      ) as _i21.Future<_i9.ElectrumXNode>);
  @override
  _i21.Future<List<Map<String, dynamic>>> fastFetch(
          List<String>? allTxHashes) =>
      (super.noSuchMethod(
        Invocation.method(
          #fastFetch,
          [allTxHashes],
        ),
        returnValue: _i21.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i21.Future<List<Map<String, dynamic>>>);
  @override
  _i21.Future<int> getTxCount({required String? address}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTxCount,
          [],
          {#address: address},
        ),
        returnValue: _i21.Future<int>.value(0),
      ) as _i21.Future<int>);
  @override
  _i21.Future<void> checkCurrentReceivingAddressesForTransactions() =>
      (super.noSuchMethod(
        Invocation.method(
          #checkCurrentReceivingAddressesForTransactions,
          [],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  _i21.Future<void> checkCurrentChangeAddressesForTransactions() =>
      (super.noSuchMethod(
        Invocation.method(
          #checkCurrentChangeAddressesForTransactions,
          [],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  int estimateTxFee({
    required int? vSize,
    required int? feeRatePerKB,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #estimateTxFee,
          [],
          {
            #vSize: vSize,
            #feeRatePerKB: feeRatePerKB,
          },
        ),
        returnValue: 0,
      ) as int);
  @override
  dynamic coinSelection({
    required int? satoshiAmountToSend,
    required int? selectedTxFeeRate,
    required String? recipientAddress,
    required bool? coinControl,
    required bool? isSendAll,
    int? satsPerVByte,
    int? additionalOutputs = 0,
    List<_i17.UTXO>? utxos,
  }) =>
      super.noSuchMethod(Invocation.method(
        #coinSelection,
        [],
        {
          #satoshiAmountToSend: satoshiAmountToSend,
          #selectedTxFeeRate: selectedTxFeeRate,
          #recipientAddress: recipientAddress,
          #coinControl: coinControl,
          #isSendAll: isSendAll,
          #satsPerVByte: satsPerVByte,
          #additionalOutputs: additionalOutputs,
          #utxos: utxos,
        },
      ));
  @override
  _i21.Future<List<_i26.SigningData>> fetchBuildTxData(
          List<_i17.UTXO>? utxosToUse) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchBuildTxData,
          [utxosToUse],
        ),
        returnValue:
            _i21.Future<List<_i26.SigningData>>.value(<_i26.SigningData>[]),
      ) as _i21.Future<List<_i26.SigningData>>);
  @override
  _i21.Future<Map<String, dynamic>> buildTransaction({
    required List<_i26.SigningData>? utxoSigningData,
    required List<String>? recipients,
    required List<int>? satoshiAmounts,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #buildTransaction,
          [],
          {
            #utxoSigningData: utxoSigningData,
            #recipients: recipients,
            #satoshiAmounts: satoshiAmounts,
          },
        ),
        returnValue:
            _i21.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i21.Future<Map<String, dynamic>>);
  @override
  _i21.Future<void> fullRescan(
    int? maxUnusedAddressGap,
    int? maxNumberOfIndexesToCheck,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #fullRescan,
          [
            maxUnusedAddressGap,
            maxNumberOfIndexesToCheck,
          ],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  _i21.Future<_i14.Amount> estimateFeeFor(
    _i14.Amount? amount,
    int? feeRate,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #estimateFeeFor,
          [
            amount,
            feeRate,
          ],
        ),
        returnValue: _i21.Future<_i14.Amount>.value(_FakeAmount_12(
          this,
          Invocation.method(
            #estimateFeeFor,
            [
              amount,
              feeRate,
            ],
          ),
        )),
      ) as _i21.Future<_i14.Amount>);
  @override
  _i14.Amount roughFeeEstimate(
    int? inputCount,
    int? outputCount,
    int? feeRatePerKB,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #roughFeeEstimate,
          [
            inputCount,
            outputCount,
            feeRatePerKB,
          ],
        ),
        returnValue: _FakeAmount_12(
          this,
          Invocation.method(
            #roughFeeEstimate,
            [
              inputCount,
              outputCount,
              feeRatePerKB,
            ],
          ),
        ),
      ) as _i14.Amount);
  @override
  _i21.Future<_i14.Amount> sweepAllEstimate(int? feeRate) =>
      (super.noSuchMethod(
        Invocation.method(
          #sweepAllEstimate,
          [feeRate],
        ),
        returnValue: _i21.Future<_i14.Amount>.value(_FakeAmount_12(
          this,
          Invocation.method(
            #sweepAllEstimate,
            [feeRate],
          ),
        )),
      ) as _i21.Future<_i14.Amount>);
  @override
  _i21.Future<bool> generateNewAddress() => (super.noSuchMethod(
        Invocation.method(
          #generateNewAddress,
          [],
        ),
        returnValue: _i21.Future<bool>.value(false),
      ) as _i21.Future<bool>);
  @override
  void initCache(
    String? walletId,
    _i20.Coin? coin,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #initCache,
          [
            walletId,
            coin,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i21.Future<void> updateCachedId(String? id) => (super.noSuchMethod(
        Invocation.method(
          #updateCachedId,
          [id],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  int getCachedChainHeight() => (super.noSuchMethod(
        Invocation.method(
          #getCachedChainHeight,
          [],
        ),
        returnValue: 0,
      ) as int);
  @override
  _i21.Future<void> updateCachedChainHeight(int? height) => (super.noSuchMethod(
        Invocation.method(
          #updateCachedChainHeight,
          [height],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  bool getCachedIsFavorite() => (super.noSuchMethod(
        Invocation.method(
          #getCachedIsFavorite,
          [],
        ),
        returnValue: false,
      ) as bool);
  @override
  _i21.Future<void> updateCachedIsFavorite(bool? isFavorite) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateCachedIsFavorite,
          [isFavorite],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  _i11.Balance getCachedBalance() => (super.noSuchMethod(
        Invocation.method(
          #getCachedBalance,
          [],
        ),
        returnValue: _FakeBalance_8(
          this,
          Invocation.method(
            #getCachedBalance,
            [],
          ),
        ),
      ) as _i11.Balance);
  @override
  _i21.Future<void> updateCachedBalance(_i11.Balance? balance) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateCachedBalance,
          [balance],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  _i11.Balance getCachedBalanceSecondary() => (super.noSuchMethod(
        Invocation.method(
          #getCachedBalanceSecondary,
          [],
        ),
        returnValue: _FakeBalance_8(
          this,
          Invocation.method(
            #getCachedBalanceSecondary,
            [],
          ),
        ),
      ) as _i11.Balance);
  @override
  _i21.Future<void> updateCachedBalanceSecondary(_i11.Balance? balance) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateCachedBalanceSecondary,
          [balance],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  List<String> getWalletTokenContractAddresses() => (super.noSuchMethod(
        Invocation.method(
          #getWalletTokenContractAddresses,
          [],
        ),
        returnValue: <String>[],
      ) as List<String>);
  @override
  _i21.Future<void> updateWalletTokenContractAddresses(
          List<String>? contractAddresses) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateWalletTokenContractAddresses,
          [contractAddresses],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  void initWalletDB({_i12.MainDB? mockableOverride}) => super.noSuchMethod(
        Invocation.method(
          #initWalletDB,
          [],
          {#mockableOverride: mockableOverride},
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i21.Future<_i15.Tuple2<_i17.Transaction, _i17.Address>> parseTransaction(
    Map<String, dynamic>? txData,
    dynamic electrumxClient,
    List<_i17.Address>? myAddresses,
    _i20.Coin? coin,
    int? minConfirms,
    String? walletId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #parseTransaction,
          [
            txData,
            electrumxClient,
            myAddresses,
            coin,
            minConfirms,
            walletId,
          ],
        ),
        returnValue:
            _i21.Future<_i15.Tuple2<_i17.Transaction, _i17.Address>>.value(
                _FakeTuple2_13<_i17.Transaction, _i17.Address>(
          this,
          Invocation.method(
            #parseTransaction,
            [
              txData,
              electrumxClient,
              myAddresses,
              coin,
              minConfirms,
              walletId,
            ],
          ),
        )),
      ) as _i21.Future<_i15.Tuple2<_i17.Transaction, _i17.Address>>);
  @override
  void initPaynymWalletInterface({
    required String? walletId,
    required String? walletName,
    required _i13.NetworkType? network,
    required _i20.Coin? coin,
    required _i12.MainDB? db,
    required _i9.ElectrumX? electrumXClient,
    required _i27.SecureStorageInterface? secureStorage,
    required int? dustLimit,
    required int? dustLimitP2PKH,
    required int? minConfirms,
    required _i21.Future<String?> Function()? getMnemonicString,
    required _i21.Future<String?> Function()? getMnemonicPassphrase,
    required _i21.Future<int> Function()? getChainHeight,
    required _i21.Future<String> Function()? getCurrentChangeAddress,
    required int Function({
      required int feeRatePerKB,
      required int vSize,
    })? estimateTxFee,
    required _i21.Future<Map<String, dynamic>> Function({
      required String address,
      required _i14.Amount amount,
      Map<String, dynamic>? args,
    })? prepareSend,
    required _i21.Future<int> Function({required String address})? getTxCount,
    required _i21.Future<List<_i26.SigningData>> Function(List<_i17.UTXO>)?
        fetchBuildTxData,
    required _i21.Future<void> Function()? refresh,
    required _i21.Future<void> Function()? checkChangeAddressForTransactions,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #initPaynymWalletInterface,
          [],
          {
            #walletId: walletId,
            #walletName: walletName,
            #network: network,
            #coin: coin,
            #db: db,
            #electrumXClient: electrumXClient,
            #secureStorage: secureStorage,
            #dustLimit: dustLimit,
            #dustLimitP2PKH: dustLimitP2PKH,
            #minConfirms: minConfirms,
            #getMnemonicString: getMnemonicString,
            #getMnemonicPassphrase: getMnemonicPassphrase,
            #getChainHeight: getChainHeight,
            #getCurrentChangeAddress: getCurrentChangeAddress,
            #estimateTxFee: estimateTxFee,
            #prepareSend: prepareSend,
            #getTxCount: getTxCount,
            #fetchBuildTxData: fetchBuildTxData,
            #refresh: refresh,
            #checkChangeAddressForTransactions:
                checkChangeAddressForTransactions,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i21.Future<_i16.BIP32> getBip47BaseNode() => (super.noSuchMethod(
        Invocation.method(
          #getBip47BaseNode,
          [],
        ),
        returnValue: _i21.Future<_i16.BIP32>.value(_FakeBIP32_14(
          this,
          Invocation.method(
            #getBip47BaseNode,
            [],
          ),
        )),
      ) as _i21.Future<_i16.BIP32>);
  @override
  _i21.Future<_i28.Uint8List> getPrivateKeyForPaynymReceivingAddress({
    required String? paymentCodeString,
    required int? index,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPrivateKeyForPaynymReceivingAddress,
          [],
          {
            #paymentCodeString: paymentCodeString,
            #index: index,
          },
        ),
        returnValue: _i21.Future<_i28.Uint8List>.value(_i28.Uint8List(0)),
      ) as _i21.Future<_i28.Uint8List>);
  @override
  _i21.Future<_i17.Address> currentReceivingPaynymAddress({
    required _i18.PaymentCode? sender,
    required bool? isSegwit,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #currentReceivingPaynymAddress,
          [],
          {
            #sender: sender,
            #isSegwit: isSegwit,
          },
        ),
        returnValue: _i21.Future<_i17.Address>.value(_FakeAddress_15(
          this,
          Invocation.method(
            #currentReceivingPaynymAddress,
            [],
            {
              #sender: sender,
              #isSegwit: isSegwit,
            },
          ),
        )),
      ) as _i21.Future<_i17.Address>);
  @override
  _i21.Future<void> checkCurrentPaynymReceivingAddressForTransactions({
    required _i18.PaymentCode? sender,
    required bool? isSegwit,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkCurrentPaynymReceivingAddressForTransactions,
          [],
          {
            #sender: sender,
            #isSegwit: isSegwit,
          },
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  _i21.Future<void> checkAllCurrentReceivingPaynymAddressesForTransactions() =>
      (super.noSuchMethod(
        Invocation.method(
          #checkAllCurrentReceivingPaynymAddressesForTransactions,
          [],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  _i21.Future<_i16.BIP32> deriveNotificationBip32Node() => (super.noSuchMethod(
        Invocation.method(
          #deriveNotificationBip32Node,
          [],
        ),
        returnValue: _i21.Future<_i16.BIP32>.value(_FakeBIP32_14(
          this,
          Invocation.method(
            #deriveNotificationBip32Node,
            [],
          ),
        )),
      ) as _i21.Future<_i16.BIP32>);
  @override
  _i21.Future<_i18.PaymentCode> getPaymentCode({required bool? isSegwit}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPaymentCode,
          [],
          {#isSegwit: isSegwit},
        ),
        returnValue: _i21.Future<_i18.PaymentCode>.value(_FakePaymentCode_16(
          this,
          Invocation.method(
            #getPaymentCode,
            [],
            {#isSegwit: isSegwit},
          ),
        )),
      ) as _i21.Future<_i18.PaymentCode>);
  @override
  _i21.Future<_i28.Uint8List> signWithNotificationKey(_i28.Uint8List? data) =>
      (super.noSuchMethod(
        Invocation.method(
          #signWithNotificationKey,
          [data],
        ),
        returnValue: _i21.Future<_i28.Uint8List>.value(_i28.Uint8List(0)),
      ) as _i21.Future<_i28.Uint8List>);
  @override
  _i21.Future<String> signStringWithNotificationKey(String? data) =>
      (super.noSuchMethod(
        Invocation.method(
          #signStringWithNotificationKey,
          [data],
        ),
        returnValue: _i21.Future<String>.value(''),
      ) as _i21.Future<String>);
  @override
  _i21.Future<Map<String, dynamic>> preparePaymentCodeSend({
    required _i18.PaymentCode? paymentCode,
    required bool? isSegwit,
    required _i14.Amount? amount,
    Map<String, dynamic>? args,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #preparePaymentCodeSend,
          [],
          {
            #paymentCode: paymentCode,
            #isSegwit: isSegwit,
            #amount: amount,
            #args: args,
          },
        ),
        returnValue:
            _i21.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i21.Future<Map<String, dynamic>>);
  @override
  _i21.Future<_i17.Address> nextUnusedSendAddressFrom({
    required _i18.PaymentCode? pCode,
    required bool? isSegwit,
    required _i16.BIP32? privateKeyNode,
    int? startIndex = 0,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #nextUnusedSendAddressFrom,
          [],
          {
            #pCode: pCode,
            #isSegwit: isSegwit,
            #privateKeyNode: privateKeyNode,
            #startIndex: startIndex,
          },
        ),
        returnValue: _i21.Future<_i17.Address>.value(_FakeAddress_15(
          this,
          Invocation.method(
            #nextUnusedSendAddressFrom,
            [],
            {
              #pCode: pCode,
              #isSegwit: isSegwit,
              #privateKeyNode: privateKeyNode,
              #startIndex: startIndex,
            },
          ),
        )),
      ) as _i21.Future<_i17.Address>);
  @override
  _i21.Future<Map<String, dynamic>> prepareNotificationTx({
    required int? selectedTxFeeRate,
    required String? targetPaymentCodeString,
    int? additionalOutputs = 0,
    List<_i17.UTXO>? utxos,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #prepareNotificationTx,
          [],
          {
            #selectedTxFeeRate: selectedTxFeeRate,
            #targetPaymentCodeString: targetPaymentCodeString,
            #additionalOutputs: additionalOutputs,
            #utxos: utxos,
          },
        ),
        returnValue:
            _i21.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i21.Future<Map<String, dynamic>>);
  @override
  _i21.Future<String> broadcastNotificationTx(
          {required Map<String, dynamic>? preparedTx}) =>
      (super.noSuchMethod(
        Invocation.method(
          #broadcastNotificationTx,
          [],
          {#preparedTx: preparedTx},
        ),
        returnValue: _i21.Future<String>.value(''),
      ) as _i21.Future<String>);
  @override
  _i21.Future<bool> hasConnected(String? paymentCodeString) =>
      (super.noSuchMethod(
        Invocation.method(
          #hasConnected,
          [paymentCodeString],
        ),
        returnValue: _i21.Future<bool>.value(false),
      ) as _i21.Future<bool>);
  @override
  _i21.Future<_i18.PaymentCode?> unBlindedPaymentCodeFromTransaction(
          {required _i17.Transaction? transaction}) =>
      (super.noSuchMethod(
        Invocation.method(
          #unBlindedPaymentCodeFromTransaction,
          [],
          {#transaction: transaction},
        ),
        returnValue: _i21.Future<_i18.PaymentCode?>.value(),
      ) as _i21.Future<_i18.PaymentCode?>);
  @override
  _i21.Future<_i18.PaymentCode?> unBlindedPaymentCodeFromTransactionBad(
          {required _i17.Transaction? transaction}) =>
      (super.noSuchMethod(
        Invocation.method(
          #unBlindedPaymentCodeFromTransactionBad,
          [],
          {#transaction: transaction},
        ),
        returnValue: _i21.Future<_i18.PaymentCode?>.value(),
      ) as _i21.Future<_i18.PaymentCode?>);
  @override
  _i21.Future<List<_i18.PaymentCode>>
      getAllPaymentCodesFromNotificationTransactions() => (super.noSuchMethod(
            Invocation.method(
              #getAllPaymentCodesFromNotificationTransactions,
              [],
            ),
            returnValue:
                _i21.Future<List<_i18.PaymentCode>>.value(<_i18.PaymentCode>[]),
          ) as _i21.Future<List<_i18.PaymentCode>>);
  @override
  _i21.Future<void> checkForNotificationTransactionsTo(
          Set<String>? otherCodeStrings) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkForNotificationTransactionsTo,
          [otherCodeStrings],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  _i21.Future<void> restoreAllHistory({
    required int? maxUnusedAddressGap,
    required int? maxNumberOfIndexesToCheck,
    required Set<String>? paymentCodeStrings,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #restoreAllHistory,
          [],
          {
            #maxUnusedAddressGap: maxUnusedAddressGap,
            #maxNumberOfIndexesToCheck: maxNumberOfIndexesToCheck,
            #paymentCodeStrings: paymentCodeStrings,
          },
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  _i21.Future<void> restoreHistoryWith({
    required _i18.PaymentCode? other,
    required bool? checkSegwitAsWell,
    required int? maxUnusedAddressGap,
    required int? maxNumberOfIndexesToCheck,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #restoreHistoryWith,
          [],
          {
            #other: other,
            #checkSegwitAsWell: checkSegwitAsWell,
            #maxUnusedAddressGap: maxUnusedAddressGap,
            #maxNumberOfIndexesToCheck: maxNumberOfIndexesToCheck,
          },
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  _i21.Future<_i17.Address> getMyNotificationAddress() => (super.noSuchMethod(
        Invocation.method(
          #getMyNotificationAddress,
          [],
        ),
        returnValue: _i21.Future<_i17.Address>.value(_FakeAddress_15(
          this,
          Invocation.method(
            #getMyNotificationAddress,
            [],
          ),
        )),
      ) as _i21.Future<_i17.Address>);
  @override
  _i21.Future<List<String>> lookupKey(String? paymentCodeString) =>
      (super.noSuchMethod(
        Invocation.method(
          #lookupKey,
          [paymentCodeString],
        ),
        returnValue: _i21.Future<List<String>>.value(<String>[]),
      ) as _i21.Future<List<String>>);
  @override
  _i21.Future<String?> paymentCodeStringByKey(String? key) =>
      (super.noSuchMethod(
        Invocation.method(
          #paymentCodeStringByKey,
          [key],
        ),
        returnValue: _i21.Future<String?>.value(),
      ) as _i21.Future<String?>);
  @override
  _i21.Future<String> storeCode(String? paymentCodeString) =>
      (super.noSuchMethod(
        Invocation.method(
          #storeCode,
          [paymentCodeString],
        ),
        returnValue: _i21.Future<String>.value(''),
      ) as _i21.Future<String>);
  @override
  void initCoinControlInterface({
    required String? walletId,
    required String? walletName,
    required _i20.Coin? coin,
    required _i12.MainDB? db,
    required _i21.Future<int> Function()? getChainHeight,
    required _i21.Future<void> Function(_i11.Balance)? refreshedBalanceCallback,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #initCoinControlInterface,
          [],
          {
            #walletId: walletId,
            #walletName: walletName,
            #coin: coin,
            #db: db,
            #getChainHeight: getChainHeight,
            #refreshedBalanceCallback: refreshedBalanceCallback,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i21.Future<void> refreshBalance({bool? notify = false}) =>
      (super.noSuchMethod(
        Invocation.method(
          #refreshBalance,
          [],
          {#notify: notify},
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
}

/// A class which mocks [LocaleService].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocaleService extends _i1.Mock implements _i29.LocaleService {
  MockLocaleService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get locale => (super.noSuchMethod(
        Invocation.getter(#locale),
        returnValue: '',
      ) as String);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  _i21.Future<void> loadLocale({bool? notify = true}) => (super.noSuchMethod(
        Invocation.method(
          #loadLocale,
          [],
          {#notify: notify},
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  void addListener(_i23.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i23.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [ThemeService].
///
/// See the documentation for Mockito's code generation for more information.
class MockThemeService extends _i1.Mock implements _i30.ThemeService {
  MockThemeService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i12.MainDB get db => (super.noSuchMethod(
        Invocation.getter(#db),
        returnValue: _FakeMainDB_9(
          this,
          Invocation.getter(#db),
        ),
      ) as _i12.MainDB);
  @override
  List<_i31.StackTheme> get installedThemes => (super.noSuchMethod(
        Invocation.getter(#installedThemes),
        returnValue: <_i31.StackTheme>[],
      ) as List<_i31.StackTheme>);
  @override
  void init(_i12.MainDB? db) => super.noSuchMethod(
        Invocation.method(
          #init,
          [db],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i21.Future<void> install({required _i28.Uint8List? themeArchiveData}) =>
      (super.noSuchMethod(
        Invocation.method(
          #install,
          [],
          {#themeArchiveData: themeArchiveData},
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  _i21.Future<void> remove({required String? themeId}) => (super.noSuchMethod(
        Invocation.method(
          #remove,
          [],
          {#themeId: themeId},
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  _i21.Future<void> checkDefaultThemesOnStartup() => (super.noSuchMethod(
        Invocation.method(
          #checkDefaultThemesOnStartup,
          [],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  _i21.Future<bool> verifyInstalled({required String? themeId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyInstalled,
          [],
          {#themeId: themeId},
        ),
        returnValue: _i21.Future<bool>.value(false),
      ) as _i21.Future<bool>);
  @override
  _i21.Future<List<_i30.StackThemeMetaData>> fetchThemes() =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchThemes,
          [],
        ),
        returnValue: _i21.Future<List<_i30.StackThemeMetaData>>.value(
            <_i30.StackThemeMetaData>[]),
      ) as _i21.Future<List<_i30.StackThemeMetaData>>);
  @override
  _i21.Future<_i28.Uint8List> fetchTheme(
          {required _i30.StackThemeMetaData? themeMetaData}) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchTheme,
          [],
          {#themeMetaData: themeMetaData},
        ),
        returnValue: _i21.Future<_i28.Uint8List>.value(_i28.Uint8List(0)),
      ) as _i21.Future<_i28.Uint8List>);
  @override
  _i31.StackTheme? getTheme({required String? themeId}) =>
      (super.noSuchMethod(Invocation.method(
        #getTheme,
        [],
        {#themeId: themeId},
      )) as _i31.StackTheme?);
}
